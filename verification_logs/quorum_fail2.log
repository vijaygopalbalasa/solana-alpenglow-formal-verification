sh: line 0: type: cvc4: not found
sh: line 0: type: yices: not found
sh: line 0: type: veriT: not found
sh: line 0: type: SPASS: not found
sh: line 0: type: zipperposition: not found
-------------------- tlapm configuration --------------------
version == "386cb32"
built_with == "OCaml 5.1.0"
tlapm_executable == "/Users/vijaygopalb/solana-alpenglow-formal-verification/tools/tlapm/bin/tlapm"
max_threads == 8
library_path == "/Users/vijaygopalb/solana-alpenglow-formal-verification/tools/tlapm/lib/tlapm/stdlib"
search_path == << "/Users/vijaygopalb/solana-alpenglow-formal-verification/tools/tlapm/lib/tlapm/stdlib" >>
Isabelle == "PATH='/Users/vijaygopalb/solana-alpenglow-formal-verification/tools/tlapm/lib/tlapm/backends/bin:/Users/vijaygopalb/solana-alpenglow-formal-verification/tools/tlapm/lib/tlapm/backends/Isabelle/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/bin:/Users/vijaygopalb/.local/state/fnm_multishells/867_1759582361683/bin:/Users/vijaygopalb/.codeium/windsurf/bin:/opt/homebrew/opt/python@3.11/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/opt/homebrew/opt/gnu-tar/libexec/gnubin:/Users/vijaygopalb/.avm/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/vijaygopalb/.cargo/bin:/Users/vijaygopalb/.foundry/bin'; isabelle process -e \"(use_thy \\\"$file\\\"; writeln \\\"((TLAPS SUCCESS))\\\");\" -d /Users/vijaygopalb/solana-alpenglow-formal-verification/tools/tlapm/lib/tlapm/backends/Isabelle/src/TLA+ -l TLA+"
Isabelle version == "Isabelle2025"
zenon == "PATH='/Users/vijaygopalb/solana-alpenglow-formal-verification/tools/tlapm/lib/tlapm/backends/bin:/Users/vijaygopalb/solana-alpenglow-formal-verification/tools/tlapm/lib/tlapm/backends/Isabelle/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/bin:/Users/vijaygopalb/.local/state/fnm_multishells/867_1759582361683/bin:/Users/vijaygopalb/.codeium/windsurf/bin:/opt/homebrew/opt/python@3.11/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/opt/homebrew/opt/gnu-tar/libexec/gnubin:/Users/vijaygopalb/.avm/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/vijaygopalb/.cargo/bin:/Users/vijaygopalb/.foundry/bin'; zenon -p0 -x tla -oisar -max-time 1d \"$file\""
zenon version == "zenon version 0.8.4 [a268] 2017-11-14"
Executable "cvc4" not found in this PATH:
/Users/vijaygopalb/solana-alpenglow-formal-verification/tools/tlapm/lib/tlapm/backends/bin:/Users/vijaygopalb/solana-alpenglow-formal-verification/tools/tlapm/lib/tlapm/backends/Isabelle/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/bin:/Users/vijaygopalb/.local/state/fnm_multishells/867_1759582361683/bin:/Users/vijaygopalb/.codeium/windsurf/bin:/opt/homebrew/opt/python@3.11/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/opt/homebrew/opt/gnu-tar/libexec/gnubin:/Users/vijaygopalb/.avm/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/vijaygopalb/.cargo/bin:/Users/vijaygopalb/.foundry/bin

Executable "yices" not found in this PATH:
/Users/vijaygopalb/solana-alpenglow-formal-verification/tools/tlapm/lib/tlapm/backends/bin:/Users/vijaygopalb/solana-alpenglow-formal-verification/tools/tlapm/lib/tlapm/backends/Isabelle/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/bin:/Users/vijaygopalb/.local/state/fnm_multishells/867_1759582361683/bin:/Users/vijaygopalb/.codeium/windsurf/bin:/opt/homebrew/opt/python@3.11/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/opt/homebrew/opt/gnu-tar/libexec/gnubin:/Users/vijaygopalb/.avm/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/vijaygopalb/.cargo/bin:/Users/vijaygopalb/.foundry/bin

Z3 == "PATH='/Users/vijaygopalb/solana-alpenglow-formal-verification/tools/tlapm/lib/tlapm/backends/bin:/Users/vijaygopalb/solana-alpenglow-formal-verification/tools/tlapm/lib/tlapm/backends/Isabelle/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/bin:/Users/vijaygopalb/.local/state/fnm_multishells/867_1759582361683/bin:/Users/vijaygopalb/.codeium/windsurf/bin:/opt/homebrew/opt/python@3.11/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/opt/homebrew/opt/gnu-tar/libexec/gnubin:/Users/vijaygopalb/.avm/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/vijaygopalb/.cargo/bin:/Users/vijaygopalb/.foundry/bin'; z3 -smt2 -v:0 AUTO_CONFIG=false smt.MBQI=true \"$file\""
Z3 version == "Z3 version 4.8.9 - 64 bit"
Executable "veriT" not found in this PATH:
/Users/vijaygopalb/solana-alpenglow-formal-verification/tools/tlapm/lib/tlapm/backends/bin:/Users/vijaygopalb/solana-alpenglow-formal-verification/tools/tlapm/lib/tlapm/backends/Isabelle/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/bin:/Users/vijaygopalb/.local/state/fnm_multishells/867_1759582361683/bin:/Users/vijaygopalb/.codeium/windsurf/bin:/opt/homebrew/opt/python@3.11/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/opt/homebrew/opt/gnu-tar/libexec/gnubin:/Users/vijaygopalb/.avm/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/vijaygopalb/.cargo/bin:/Users/vijaygopalb/.foundry/bin

SMT == "PATH='/Users/vijaygopalb/solana-alpenglow-formal-verification/tools/tlapm/lib/tlapm/backends/bin:/Users/vijaygopalb/solana-alpenglow-formal-verification/tools/tlapm/lib/tlapm/backends/Isabelle/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/bin:/Users/vijaygopalb/.local/state/fnm_multishells/867_1759582361683/bin:/Users/vijaygopalb/.codeium/windsurf/bin:/opt/homebrew/opt/python@3.11/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/opt/homebrew/opt/gnu-tar/libexec/gnubin:/Users/vijaygopalb/.avm/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/vijaygopalb/.cargo/bin:/Users/vijaygopalb/.foundry/bin'; z3 -smt2 -v:0 AUTO_CONFIG=false smt.MBQI=true \"$file\""
SMT version == "Z3 version 4.8.9 - 64 bit"
Executable "SPASS" not found in this PATH:
/Users/vijaygopalb/solana-alpenglow-formal-verification/tools/tlapm/lib/tlapm/backends/bin:/Users/vijaygopalb/solana-alpenglow-formal-verification/tools/tlapm/lib/tlapm/backends/Isabelle/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/bin:/Users/vijaygopalb/.local/state/fnm_multishells/867_1759582361683/bin:/Users/vijaygopalb/.codeium/windsurf/bin:/opt/homebrew/opt/python@3.11/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/opt/homebrew/opt/gnu-tar/libexec/gnubin:/Users/vijaygopalb/.avm/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/vijaygopalb/.cargo/bin:/Users/vijaygopalb/.foundry/bin

Executable "zipperposition" not found in this PATH:
/Users/vijaygopalb/solana-alpenglow-formal-verification/tools/tlapm/lib/tlapm/backends/bin:/Users/vijaygopalb/solana-alpenglow-formal-verification/tools/tlapm/lib/tlapm/backends/Isabelle/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/bin:/Users/vijaygopalb/.local/state/fnm_multishells/867_1759582361683/bin:/Users/vijaygopalb/.codeium/windsurf/bin:/opt/homebrew/opt/python@3.11/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/opt/homebrew/opt/gnu-tar/libexec/gnubin:/Users/vijaygopalb/.avm/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/vijaygopalb/.cargo/bin:/Users/vijaygopalb/.foundry/bin

LS4 == "PATH='/Users/vijaygopalb/solana-alpenglow-formal-verification/tools/tlapm/lib/tlapm/backends/bin:/Users/vijaygopalb/solana-alpenglow-formal-verification/tools/tlapm/lib/tlapm/backends/Isabelle/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/bin:/Users/vijaygopalb/.local/state/fnm_multishells/867_1759582361683/bin:/Users/vijaygopalb/.codeium/windsurf/bin:/opt/homebrew/opt/python@3.11/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/opt/homebrew/opt/gnu-tar/libexec/gnubin:/Users/vijaygopalb/.avm/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/vijaygopalb/.cargo/bin:/Users/vijaygopalb/.foundry/bin'; ptl_to_trp -i $file | ls4"
LS4 version == "unknown"
flatten_obligations == TRUE
normalize == TRUE
=============================================================
(* module "QuorumIntersection" parsed from "./proofs/QuorumIntersection.tla" *)
(* module "FiniteSets" parsed from "/Users/vijaygopalb/solana-alpenglow-formal-verification/tools/tlapm/lib/tlapm/stdlib/FiniteSets.tla" *)
(* module "TLAPS" parsed from "/Users/vijaygopalb/solana-alpenglow-formal-verification/tools/tlapm/lib/tlapm/stdlib/TLAPS.tla" *)
(* processing module "FiniteSets" *)
(* processing module "TLAPS" *)
(* processing module "QuorumIntersection" *)
Deciding whether to generate proof obligations for a proof in a file with basename `TLAPS.tla` (inside `Proof.Gen`)

Skipping generation of proof obligations for this particular proof, because no path from those given to `tlapm` has basename `TLAPS.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `TLAPS.tla` (inside `Proof.Gen`)

Skipping generation of proof obligations for this particular proof, because no path from those given to `tlapm` has basename `TLAPS.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

Deciding whether to generate proof obligations for a proof in a file with basename `QuorumIntersection.tla` (inside `Proof.Gen`)

Will generate proof obligations for a proof in a file with basename `QuorumIntersection.tla`

(* loading fingerprints in ".tlacache/QuorumIntersection.tlaps/fingerprints" *)
(* module "QuorumIntersection": 97 unique obligations *)
(* removing ".tlacache/QuorumIntersection.tlaps/QuorumIntersection.thy" *)
Executable "cvc4" not found in this PATH:
/Users/vijaygopalb/solana-alpenglow-formal-verification/tools/tlapm/lib/tlapm/backends/bin:/Users/vijaygopalb/solana-alpenglow-formal-verification/tools/tlapm/lib/tlapm/backends/Isabelle/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/bin:/Users/vijaygopalb/.local/state/fnm_multishells/867_1759582361683/bin:/Users/vijaygopalb/.codeium/windsurf/bin:/opt/homebrew/opt/python@3.11/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/opt/homebrew/opt/gnu-tar/libexec/gnubin:/Users/vijaygopalb/.avm/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/vijaygopalb/.cargo/bin:/Users/vijaygopalb/.foundry/bin
Executable "yices" not found in this PATH:
/Users/vijaygopalb/solana-alpenglow-formal-verification/tools/tlapm/lib/tlapm/backends/bin:/Users/vijaygopalb/solana-alpenglow-formal-verification/tools/tlapm/lib/tlapm/backends/Isabelle/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/bin:/Users/vijaygopalb/.local/state/fnm_multishells/867_1759582361683/bin:/Users/vijaygopalb/.codeium/windsurf/bin:/opt/homebrew/opt/python@3.11/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/opt/homebrew/opt/gnu-tar/libexec/gnubin:/Users/vijaygopalb/.avm/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/vijaygopalb/.cargo/bin:/Users/vijaygopalb/.foundry/bin
Executable "veriT" not found in this PATH:
/Users/vijaygopalb/solana-alpenglow-formal-verification/tools/tlapm/lib/tlapm/backends/bin:/Users/vijaygopalb/solana-alpenglow-formal-verification/tools/tlapm/lib/tlapm/backends/Isabelle/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/bin:/Users/vijaygopalb/.local/state/fnm_multishells/867_1759582361683/bin:/Users/vijaygopalb/.codeium/windsurf/bin:/opt/homebrew/opt/python@3.11/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/opt/homebrew/opt/gnu-tar/libexec/gnubin:/Users/vijaygopalb/.avm/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/vijaygopalb/.cargo/bin:/Users/vijaygopalb/.foundry/bin
Executable "SPASS" not found in this PATH:
/Users/vijaygopalb/solana-alpenglow-formal-verification/tools/tlapm/lib/tlapm/backends/bin:/Users/vijaygopalb/solana-alpenglow-formal-verification/tools/tlapm/lib/tlapm/backends/Isabelle/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/bin:/Users/vijaygopalb/.local/state/fnm_multishells/867_1759582361683/bin:/Users/vijaygopalb/.codeium/windsurf/bin:/opt/homebrew/opt/python@3.11/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/opt/homebrew/opt/gnu-tar/libexec/gnubin:/Users/vijaygopalb/.avm/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/vijaygopalb/.cargo/bin:/Users/vijaygopalb/.foundry/bin
Executable "zipperposition" not found in this PATH:
/Users/vijaygopalb/solana-alpenglow-formal-verification/tools/tlapm/lib/tlapm/backends/bin:/Users/vijaygopalb/solana-alpenglow-formal-verification/tools/tlapm/lib/tlapm/backends/Isabelle/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/bin:/Users/vijaygopalb/.local/state/fnm_multishells/867_1759582361683/bin:/Users/vijaygopalb/.codeium/windsurf/bin:/opt/homebrew/opt/python@3.11/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/opt/homebrew/opt/gnu-tar/libexec/gnubin:/Users/vijaygopalb/.avm/bin:/Users/vijaygopalb/.local/share/solana/install/active_release/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/vijaygopalb/.cargo/bin:/Users/vijaygopalb/.foundry/bin
(* trying obligation 1 generated from file "./proofs/QuorumIntersection.tla", line 58, characters 7-8 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 58, characters 7-8:
[INFO]: Proof obligation 1 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         SMT 
  PROVE  \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 58, characters 7-8:
[INFO]: Proof obligation 1 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         SMT 
  PROVE  \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c
(* trying obligation 2 generated from file "./proofs/QuorumIntersection.tla", line 58, characters 10-12 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 58, characters 10-12:
[INFO]: Proof obligation 2 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake
  PROVE  SMT
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 58, characters 10-12:
[INFO]: Proof obligation 2 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake
  PROVE  SMT
(* trying obligation 3 generated from file "./proofs/QuorumIntersection.tla", line 76, characters 5-6 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 76, characters 5-6:
[INFO]: Proof obligation 3 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         <1>4 ,
         <1>5 ,
         ArithmeticHelp ,
         SMT 
  PROVE  SumStake(S1 \cap S2) >= SumStake(S1) + SumStake(S2) - TotalStake
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 76, characters 5-6:
[INFO]: Proof obligation 3 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         <1>4 ,
         <1>5 ,
         ArithmeticHelp ,
         SMT 
  PROVE  SumStake(S1 \cap S2) >= SumStake(S1) + SumStake(S2) - TotalStake
(* trying obligation 4 generated from file "./proofs/QuorumIntersection.tla", line 76, characters 8-11 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 76, characters 8-11:
[INFO]: Proof obligation 4 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators
  PROVE  <1>4
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 76, characters 8-11:
[INFO]: Proof obligation 4 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators
  PROVE  <1>4
(* trying obligation 5 generated from file "./proofs/QuorumIntersection.tla", line 76, characters 14-17 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 76, characters 14-17:
[INFO]: Proof obligation 5 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         <1>4 
  PROVE  <1>5
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 76, characters 14-17:
[INFO]: Proof obligation 5 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         <1>4 
  PROVE  <1>5
(* trying obligation 6 generated from file "./proofs/QuorumIntersection.tla", line 76, characters 20-33 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 76, characters 20-33:
[INFO]: Proof obligation 6 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         <1>4 ,
         <1>5 
  PROVE  ArithmeticHelp
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 76, characters 20-33:
[INFO]: Proof obligation 6 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         <1>4 ,
         <1>5 
  PROVE  ArithmeticHelp
(* trying obligation 7 generated from file "./proofs/QuorumIntersection.tla", line 76, characters 36-38 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 76, characters 36-38:
[INFO]: Proof obligation 7 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         <1>4 ,
         <1>5 ,
         ArithmeticHelp 
  PROVE  SMT
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 76, characters 36-38:
[INFO]: Proof obligation 7 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         <1>4 ,
         <1>5 ,
         ArithmeticHelp 
  PROVE  SMT
(* trying obligation 8 generated from file "./proofs/QuorumIntersection.tla", line 66, characters 5-6 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 66, characters 5-6:
[INFO]: Proof obligation 8 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         SumStakeUnion 
  PROVE  SumStake(S1) + SumStake(S2)
         = SumStake(S1 \cup S2) + SumStake(S1 \cap S2)
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 66, characters 5-6:
[INFO]: Proof obligation 8 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         SumStakeUnion 
  PROVE  SumStake(S1) + SumStake(S2)
         = SumStake(S1 \cup S2) + SumStake(S1 \cap S2)
(* trying obligation 9 generated from file "./proofs/QuorumIntersection.tla", line 66, characters 8-20 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 66, characters 8-20:
[INFO]: Proof obligation 9 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators
  PROVE  SumStakeUnion
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 66, characters 8-20:
[INFO]: Proof obligation 9 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators
  PROVE  SumStakeUnion
(* trying obligation 10 generated from file "./proofs/QuorumIntersection.tla", line 68, characters 5-6 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 68, characters 5-6:
[INFO]: Proof obligation 10 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         SumStakeBound 
  PROVE  SumStake(S1 \cup S2) =< TotalStake
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 68, characters 5-6:
[INFO]: Proof obligation 10 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         SumStakeBound 
  PROVE  SumStake(S1 \cup S2) =< TotalStake
(* trying obligation 11 generated from file "./proofs/QuorumIntersection.tla", line 68, characters 8-20 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 68, characters 8-20:
[INFO]: Proof obligation 11 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators
  PROVE  SumStakeBound
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 68, characters 8-20:
[INFO]: Proof obligation 11 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators
  PROVE  SumStakeBound
(* trying obligation 12 generated from file "./proofs/QuorumIntersection.tla", line 70, characters 5-6 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 70, characters 5-6:
[INFO]: Proof obligation 12 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         SumStakeNat 
  PROVE  SumStake(S1 \cup S2) \in Nat /\ SumStake(S1 \cap S2) \in Nat
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 70, characters 5-6:
[INFO]: Proof obligation 12 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         SumStakeNat 
  PROVE  SumStake(S1 \cup S2) \in Nat /\ SumStake(S1 \cap S2) \in Nat
(* trying obligation 13 generated from file "./proofs/QuorumIntersection.tla", line 70, characters 8-18 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 70, characters 8-18:
[INFO]: Proof obligation 13 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators
  PROVE  SumStakeNat
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 70, characters 8-18:
[INFO]: Proof obligation 13 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators
  PROVE  SumStakeNat
(* trying obligation 14 generated from file "./proofs/QuorumIntersection.tla", line 72, characters 5-6 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 72, characters 5-6:
[INFO]: Proof obligation 14 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         <1>1 ,
         <1>2 ,
         <1>3 ,
         ArithmeticHelp ,
         SMT 
  PROVE  SumStake(S1) + SumStake(S2) =< TotalStake + SumStake(S1 \cap S2)
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 72, characters 5-6:
[INFO]: Proof obligation 14 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         <1>1 ,
         <1>2 ,
         <1>3 ,
         ArithmeticHelp ,
         SMT 
  PROVE  SumStake(S1) + SumStake(S2) =< TotalStake + SumStake(S1 \cap S2)
(* trying obligation 15 generated from file "./proofs/QuorumIntersection.tla", line 72, characters 8-11 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 72, characters 8-11:
[INFO]: Proof obligation 15 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators
  PROVE  <1>1
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 72, characters 8-11:
[INFO]: Proof obligation 15 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators
  PROVE  <1>1
(* trying obligation 16 generated from file "./proofs/QuorumIntersection.tla", line 72, characters 14-17 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 72, characters 14-17:
[INFO]: Proof obligation 16 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         <1>1 
  PROVE  <1>2
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 72, characters 14-17:
[INFO]: Proof obligation 16 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         <1>1 
  PROVE  <1>2
(* trying obligation 17 generated from file "./proofs/QuorumIntersection.tla", line 72, characters 20-23 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 72, characters 20-23:
[INFO]: Proof obligation 17 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         <1>1 ,
         <1>2 
  PROVE  <1>3
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 72, characters 20-23:
[INFO]: Proof obligation 17 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         <1>1 ,
         <1>2 
  PROVE  <1>3
(* trying obligation 18 generated from file "./proofs/QuorumIntersection.tla", line 72, characters 26-39 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 72, characters 26-39:
[INFO]: Proof obligation 18 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         <1>1 ,
         <1>2 ,
         <1>3 
  PROVE  ArithmeticHelp
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 72, characters 26-39:
[INFO]: Proof obligation 18 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         <1>1 ,
         <1>2 ,
         <1>3 
  PROVE  ArithmeticHelp
(* trying obligation 19 generated from file "./proofs/QuorumIntersection.tla", line 72, characters 42-44 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 72, characters 42-44:
[INFO]: Proof obligation 19 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         <1>1 ,
         <1>2 ,
         <1>3 ,
         ArithmeticHelp 
  PROVE  SMT
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 72, characters 42-44:
[INFO]: Proof obligation 19 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         <1>1 ,
         <1>2 ,
         <1>3 ,
         ArithmeticHelp 
  PROVE  SMT
(* trying obligation 20 generated from file "./proofs/QuorumIntersection.tla", line 74, characters 5-6 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 74, characters 5-6:
[INFO]: Proof obligation 20 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         SumStakeNat 
  PROVE  SumStake(S1) \in Nat /\ SumStake(S2) \in Nat /\ TotalStake \in Nat
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 74, characters 5-6:
[INFO]: Proof obligation 20 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         SumStakeNat 
  PROVE  SumStake(S1) \in Nat /\ SumStake(S2) \in Nat /\ TotalStake \in Nat
(* trying obligation 21 generated from file "./proofs/QuorumIntersection.tla", line 74, characters 8-18 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 74, characters 8-18:
[INFO]: Proof obligation 21 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators
  PROVE  SumStakeNat
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 74, characters 8-18:
[INFO]: Proof obligation 21 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators
  PROVE  SumStakeNat
(* trying obligation 22 generated from file "./proofs/QuorumIntersection.tla", line 85, characters 7-8 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 85, characters 7-8:
[INFO]: Proof obligation 22 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT a \in Nat,
         NEW CONSTANT b \in Nat,
         NEW CONSTANT c \in Nat,
         a >= c ,
         b >= c ,
         ArithmeticHelp ,
         SMT 
  PROVE  a + b >= 2 * c
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 85, characters 7-8:
[INFO]: Proof obligation 22 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT a \in Nat,
         NEW CONSTANT b \in Nat,
         NEW CONSTANT c \in Nat,
         a >= c ,
         b >= c ,
         ArithmeticHelp ,
         SMT 
  PROVE  a + b >= 2 * c
(* trying obligation 23 generated from file "./proofs/QuorumIntersection.tla", line 85, characters 10-23 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 85, characters 10-23:
[INFO]: Proof obligation 23 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT a \in Nat,
         NEW CONSTANT b \in Nat,
         NEW CONSTANT c \in Nat,
         a >= c ,
         b >= c 
  PROVE  ArithmeticHelp
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 85, characters 10-23:
[INFO]: Proof obligation 23 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT a \in Nat,
         NEW CONSTANT b \in Nat,
         NEW CONSTANT c \in Nat,
         a >= c ,
         b >= c 
  PROVE  ArithmeticHelp
(* trying obligation 24 generated from file "./proofs/QuorumIntersection.tla", line 85, characters 26-28 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 85, characters 26-28:
[INFO]: Proof obligation 24 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT a \in Nat,
         NEW CONSTANT b \in Nat,
         NEW CONSTANT c \in Nat,
         a >= c ,
         b >= c ,
         ArithmeticHelp 
  PROVE  SMT
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 85, characters 26-28:
[INFO]: Proof obligation 24 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT a \in Nat,
         NEW CONSTANT b \in Nat,
         NEW CONSTANT c \in Nat,
         a >= c ,
         b >= c ,
         ArithmeticHelp 
  PROVE  SMT
(* trying obligation 25 generated from file "./proofs/QuorumIntersection.tla", line 106, characters 13-14 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 106, characters 13-14:
[INFO]: Proof obligation 25 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <1>4 
  PROVE  Q1 \cap Q2 # {}
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 106, characters 13-14:
[INFO]: Proof obligation 25 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <1>4 
  PROVE  Q1 \cap Q2 # {}
(* trying obligation 26 generated from file "./proofs/QuorumIntersection.tla", line 106, characters 16-19 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 106, characters 16-19:
[INFO]: Proof obligation 26 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  <1>4
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 106, characters 16-19:
[INFO]: Proof obligation 26 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  <1>4
(* trying obligation 27 generated from file "./proofs/QuorumIntersection.tla", line 95, characters 5-6 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 95, characters 5-6:
[INFO]: Proof obligation 27 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         IntersectionStakeLowerBound 
  PROVE  SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 95, characters 5-6:
[INFO]: Proof obligation 27 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         IntersectionStakeLowerBound 
  PROVE  SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake
(* trying obligation 28 generated from file "./proofs/QuorumIntersection.tla", line 95, characters 8-34 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 95, characters 8-34:
[INFO]: Proof obligation 28 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  IntersectionStakeLowerBound
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 95, characters 8-34:
[INFO]: Proof obligation 28 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  IntersectionStakeLowerBound
(* trying obligation 29 generated from file "./proofs/QuorumIntersection.tla", line 97, characters 5-6 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 97, characters 5-6:
[INFO]: Proof obligation 29 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         DoubleLowerBound ,
         ThresholdBounds ,
         SumStakeNat 
  PROVE  SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 97, characters 5-6:
[INFO]: Proof obligation 29 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         DoubleLowerBound ,
         ThresholdBounds ,
         SumStakeNat 
  PROVE  SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold
(* trying obligation 30 generated from file "./proofs/QuorumIntersection.tla", line 97, characters 8-23 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 97, characters 8-23:
[INFO]: Proof obligation 30 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  DoubleLowerBound
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 97, characters 8-23:
[INFO]: Proof obligation 30 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  DoubleLowerBound
(* trying obligation 31 generated from file "./proofs/QuorumIntersection.tla", line 97, characters 26-40 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 97, characters 26-40:
[INFO]: Proof obligation 31 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         DoubleLowerBound 
  PROVE  ThresholdBounds
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 97, characters 26-40:
[INFO]: Proof obligation 31 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         DoubleLowerBound 
  PROVE  ThresholdBounds
(* trying obligation 32 generated from file "./proofs/QuorumIntersection.tla", line 97, characters 43-53 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 97, characters 43-53:
[INFO]: Proof obligation 32 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         DoubleLowerBound ,
         ThresholdBounds 
  PROVE  SumStakeNat
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 97, characters 43-53:
[INFO]: Proof obligation 32 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         DoubleLowerBound ,
         ThresholdBounds 
  PROVE  SumStakeNat
(* trying obligation 33 generated from file "./proofs/QuorumIntersection.tla", line 99, characters 5-6 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 99, characters 5-6:
[INFO]: Proof obligation 33 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         ThresholdBounds ,
         ArithmeticHelp ,
         SMT 
  PROVE  2 * FastThreshold - TotalStake > 0
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 99, characters 5-6:
[INFO]: Proof obligation 33 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         ThresholdBounds ,
         ArithmeticHelp ,
         SMT 
  PROVE  2 * FastThreshold - TotalStake > 0
(* trying obligation 34 generated from file "./proofs/QuorumIntersection.tla", line 99, characters 8-22 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 99, characters 8-22:
[INFO]: Proof obligation 34 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  ThresholdBounds
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 99, characters 8-22:
[INFO]: Proof obligation 34 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  ThresholdBounds
(* trying obligation 35 generated from file "./proofs/QuorumIntersection.tla", line 99, characters 25-38 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 99, characters 25-38:
[INFO]: Proof obligation 35 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         ThresholdBounds 
  PROVE  ArithmeticHelp
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 99, characters 25-38:
[INFO]: Proof obligation 35 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         ThresholdBounds 
  PROVE  ArithmeticHelp
(* trying obligation 36 generated from file "./proofs/QuorumIntersection.tla", line 99, characters 41-43 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 99, characters 41-43:
[INFO]: Proof obligation 36 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         ThresholdBounds ,
         ArithmeticHelp 
  PROVE  SMT
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 99, characters 41-43:
[INFO]: Proof obligation 36 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         ThresholdBounds ,
         ArithmeticHelp 
  PROVE  SMT
(* trying obligation 37 generated from file "./proofs/QuorumIntersection.tla", line 105, characters 15-16 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 105, characters 15-16:
[INFO]: Proof obligation 37 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <2>2 ,
         <1>3 ,
         ArithmeticHelp ,
         SMT 
  PROVE  FALSE
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 105, characters 15-16:
[INFO]: Proof obligation 37 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <2>2 ,
         <1>3 ,
         ArithmeticHelp ,
         SMT 
  PROVE  FALSE
(* trying obligation 38 generated from file "./proofs/QuorumIntersection.tla", line 105, characters 18-21 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 105, characters 18-21:
[INFO]: Proof obligation 38 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  <2>2
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 105, characters 18-21:
[INFO]: Proof obligation 38 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  <2>2
(* trying obligation 39 generated from file "./proofs/QuorumIntersection.tla", line 105, characters 24-27 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 105, characters 24-27:
[INFO]: Proof obligation 39 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <2>2 
  PROVE  <1>3
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 105, characters 24-27:
[INFO]: Proof obligation 39 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <2>2 
  PROVE  <1>3
(* trying obligation 40 generated from file "./proofs/QuorumIntersection.tla", line 105, characters 30-43 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 105, characters 30-43:
[INFO]: Proof obligation 40 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <2>2 ,
         <1>3 
  PROVE  ArithmeticHelp
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 105, characters 30-43:
[INFO]: Proof obligation 40 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <2>2 ,
         <1>3 
  PROVE  ArithmeticHelp
(* trying obligation 41 generated from file "./proofs/QuorumIntersection.tla", line 105, characters 46-48 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 105, characters 46-48:
[INFO]: Proof obligation 41 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <2>2 ,
         <1>3 ,
         ArithmeticHelp 
  PROVE  SMT
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 105, characters 46-48:
[INFO]: Proof obligation 41 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <2>2 ,
         <1>3 ,
         ArithmeticHelp 
  PROVE  SMT
(* trying obligation 42 generated from file "./proofs/QuorumIntersection.tla", line 102, characters 36-37 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 102, characters 36-37:
[INFO]: Proof obligation 42 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <1>4 ,
         SumStakeEmpty 
  PROVE  SumStake(Q1 \cap Q2) = 0
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 102, characters 36-37:
[INFO]: Proof obligation 42 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <1>4 ,
         SumStakeEmpty 
  PROVE  SumStake(Q1 \cap Q2) = 0
(* trying obligation 43 generated from file "./proofs/QuorumIntersection.tla", line 102, characters 39-42 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 102, characters 39-42:
[INFO]: Proof obligation 43 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  <1>4
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 102, characters 39-42:
[INFO]: Proof obligation 43 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  <1>4
(* trying obligation 44 generated from file "./proofs/QuorumIntersection.tla", line 102, characters 45-57 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 102, characters 45-57:
[INFO]: Proof obligation 44 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <1>4 
  PROVE  SumStakeEmpty
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 102, characters 45-57:
[INFO]: Proof obligation 44 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <1>4 
  PROVE  SumStakeEmpty
(* trying obligation 45 generated from file "./proofs/QuorumIntersection.tla", line 104, characters 9-10 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 104, characters 9-10:
[INFO]: Proof obligation 45 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <1>1 ,
         <1>2 ,
         <2>1 ,
         SumStakeNat ,
         ArithmeticHelp ,
         SMT 
  PROVE  0 >= 2 * FastThreshold - TotalStake
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 104, characters 9-10:
[INFO]: Proof obligation 45 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <1>1 ,
         <1>2 ,
         <2>1 ,
         SumStakeNat ,
         ArithmeticHelp ,
         SMT 
  PROVE  0 >= 2 * FastThreshold - TotalStake
(* trying obligation 46 generated from file "./proofs/QuorumIntersection.tla", line 104, characters 12-15 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 104, characters 12-15:
[INFO]: Proof obligation 46 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  <1>1
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 104, characters 12-15:
[INFO]: Proof obligation 46 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  <1>1
(* trying obligation 47 generated from file "./proofs/QuorumIntersection.tla", line 104, characters 18-21 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 104, characters 18-21:
[INFO]: Proof obligation 47 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <1>1 
  PROVE  <1>2
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 104, characters 18-21:
[INFO]: Proof obligation 47 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <1>1 
  PROVE  <1>2
(* trying obligation 48 generated from file "./proofs/QuorumIntersection.tla", line 104, characters 24-27 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 104, characters 24-27:
[INFO]: Proof obligation 48 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <1>1 ,
         <1>2 
  PROVE  <2>1
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 104, characters 24-27:
[INFO]: Proof obligation 48 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <1>1 ,
         <1>2 
  PROVE  <2>1
(* trying obligation 49 generated from file "./proofs/QuorumIntersection.tla", line 104, characters 30-40 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 104, characters 30-40:
[INFO]: Proof obligation 49 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <1>1 ,
         <1>2 ,
         <2>1 
  PROVE  SumStakeNat
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 104, characters 30-40:
[INFO]: Proof obligation 49 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <1>1 ,
         <1>2 ,
         <2>1 
  PROVE  SumStakeNat
(* trying obligation 50 generated from file "./proofs/QuorumIntersection.tla", line 104, characters 43-56 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 104, characters 43-56:
[INFO]: Proof obligation 50 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <1>1 ,
         <1>2 ,
         <2>1 ,
         SumStakeNat 
  PROVE  ArithmeticHelp
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 104, characters 43-56:
[INFO]: Proof obligation 50 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <1>1 ,
         <1>2 ,
         <2>1 ,
         SumStakeNat 
  PROVE  ArithmeticHelp
(* trying obligation 51 generated from file "./proofs/QuorumIntersection.tla", line 104, characters 59-61 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 104, characters 59-61:
[INFO]: Proof obligation 51 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <1>1 ,
         <1>2 ,
         <2>1 ,
         SumStakeNat ,
         ArithmeticHelp 
  PROVE  SMT
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 104, characters 59-61:
[INFO]: Proof obligation 51 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <1>1 ,
         <1>2 ,
         <2>1 ,
         SumStakeNat ,
         ArithmeticHelp 
  PROVE  SMT
(* trying obligation 52 generated from file "./proofs/QuorumIntersection.tla", line 127, characters 13-14 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 127, characters 13-14:
[INFO]: Proof obligation 52 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         <1>4 
  PROVE  Q1 \cap Q2 # {}
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 127, characters 13-14:
[INFO]: Proof obligation 52 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         <1>4 
  PROVE  Q1 \cap Q2 # {}
(* trying obligation 53 generated from file "./proofs/QuorumIntersection.tla", line 127, characters 16-19 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 127, characters 16-19:
[INFO]: Proof obligation 53 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  <1>4
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 127, characters 16-19:
[INFO]: Proof obligation 53 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  <1>4
(* trying obligation 54 generated from file "./proofs/QuorumIntersection.tla", line 116, characters 5-6 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 116, characters 5-6:
[INFO]: Proof obligation 54 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         IntersectionStakeLowerBound 
  PROVE  SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 116, characters 5-6:
[INFO]: Proof obligation 54 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         IntersectionStakeLowerBound 
  PROVE  SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake
(* trying obligation 55 generated from file "./proofs/QuorumIntersection.tla", line 116, characters 8-34 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 116, characters 8-34:
[INFO]: Proof obligation 55 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  IntersectionStakeLowerBound
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 116, characters 8-34:
[INFO]: Proof obligation 55 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  IntersectionStakeLowerBound
(* trying obligation 56 generated from file "./proofs/QuorumIntersection.tla", line 118, characters 5-6 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 118, characters 5-6:
[INFO]: Proof obligation 56 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         DoubleLowerBound ,
         ThresholdBounds ,
         SumStakeNat 
  PROVE  SumStake(Q1) + SumStake(Q2) >= 2 * SlowThreshold
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 118, characters 5-6:
[INFO]: Proof obligation 56 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         DoubleLowerBound ,
         ThresholdBounds ,
         SumStakeNat 
  PROVE  SumStake(Q1) + SumStake(Q2) >= 2 * SlowThreshold
(* trying obligation 57 generated from file "./proofs/QuorumIntersection.tla", line 118, characters 8-23 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 118, characters 8-23:
[INFO]: Proof obligation 57 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  DoubleLowerBound
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 118, characters 8-23:
[INFO]: Proof obligation 57 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  DoubleLowerBound
(* trying obligation 58 generated from file "./proofs/QuorumIntersection.tla", line 118, characters 26-40 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 118, characters 26-40:
[INFO]: Proof obligation 58 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         DoubleLowerBound 
  PROVE  ThresholdBounds
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 118, characters 26-40:
[INFO]: Proof obligation 58 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         DoubleLowerBound 
  PROVE  ThresholdBounds
(* trying obligation 59 generated from file "./proofs/QuorumIntersection.tla", line 118, characters 43-53 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 118, characters 43-53:
[INFO]: Proof obligation 59 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         DoubleLowerBound ,
         ThresholdBounds 
  PROVE  SumStakeNat
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 118, characters 43-53:
[INFO]: Proof obligation 59 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         DoubleLowerBound ,
         ThresholdBounds 
  PROVE  SumStakeNat
(* trying obligation 60 generated from file "./proofs/QuorumIntersection.tla", line 120, characters 5-6 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 120, characters 5-6:
[INFO]: Proof obligation 60 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         ThresholdBounds ,
         ArithmeticHelp ,
         SMT 
  PROVE  2 * SlowThreshold - TotalStake > 0
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 120, characters 5-6:
[INFO]: Proof obligation 60 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         ThresholdBounds ,
         ArithmeticHelp ,
         SMT 
  PROVE  2 * SlowThreshold - TotalStake > 0
(* trying obligation 61 generated from file "./proofs/QuorumIntersection.tla", line 120, characters 8-22 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 120, characters 8-22:
[INFO]: Proof obligation 61 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  ThresholdBounds
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 120, characters 8-22:
[INFO]: Proof obligation 61 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  ThresholdBounds
(* trying obligation 62 generated from file "./proofs/QuorumIntersection.tla", line 120, characters 25-38 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 120, characters 25-38:
[INFO]: Proof obligation 62 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         ThresholdBounds 
  PROVE  ArithmeticHelp
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 120, characters 25-38:
[INFO]: Proof obligation 62 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         ThresholdBounds 
  PROVE  ArithmeticHelp
(* trying obligation 63 generated from file "./proofs/QuorumIntersection.tla", line 120, characters 41-43 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 120, characters 41-43:
[INFO]: Proof obligation 63 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         ThresholdBounds ,
         ArithmeticHelp 
  PROVE  SMT
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 120, characters 41-43:
[INFO]: Proof obligation 63 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         ThresholdBounds ,
         ArithmeticHelp 
  PROVE  SMT
(* trying obligation 64 generated from file "./proofs/QuorumIntersection.tla", line 126, characters 15-16 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 126, characters 15-16:
[INFO]: Proof obligation 64 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         <2>2 ,
         <1>3 ,
         ArithmeticHelp ,
         SMT 
  PROVE  FALSE
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 126, characters 15-16:
[INFO]: Proof obligation 64 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         <2>2 ,
         <1>3 ,
         ArithmeticHelp ,
         SMT 
  PROVE  FALSE
(* trying obligation 65 generated from file "./proofs/QuorumIntersection.tla", line 126, characters 18-21 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 126, characters 18-21:
[INFO]: Proof obligation 65 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  <2>2
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 126, characters 18-21:
[INFO]: Proof obligation 65 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  <2>2
(* trying obligation 66 generated from file "./proofs/QuorumIntersection.tla", line 126, characters 24-27 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 126, characters 24-27:
[INFO]: Proof obligation 66 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         <2>2 
  PROVE  <1>3
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 126, characters 24-27:
[INFO]: Proof obligation 66 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         <2>2 
  PROVE  <1>3
(* trying obligation 67 generated from file "./proofs/QuorumIntersection.tla", line 126, characters 30-43 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 126, characters 30-43:
[INFO]: Proof obligation 67 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         <2>2 ,
         <1>3 
  PROVE  ArithmeticHelp
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 126, characters 30-43:
[INFO]: Proof obligation 67 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         <2>2 ,
         <1>3 
  PROVE  ArithmeticHelp
(* trying obligation 68 generated from file "./proofs/QuorumIntersection.tla", line 126, characters 46-48 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 126, characters 46-48:
[INFO]: Proof obligation 68 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         <2>2 ,
         <1>3 ,
         ArithmeticHelp 
  PROVE  SMT
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 126, characters 46-48:
[INFO]: Proof obligation 68 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         <2>2 ,
         <1>3 ,
         ArithmeticHelp 
  PROVE  SMT
(* trying obligation 69 generated from file "./proofs/QuorumIntersection.tla", line 123, characters 36-37 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 123, characters 36-37:
[INFO]: Proof obligation 69 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         <1>4 ,
         SumStakeEmpty 
  PROVE  SumStake(Q1 \cap Q2) = 0
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 123, characters 36-37:
[INFO]: Proof obligation 69 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         <1>4 ,
         SumStakeEmpty 
  PROVE  SumStake(Q1 \cap Q2) = 0
(* trying obligation 70 generated from file "./proofs/QuorumIntersection.tla", line 123, characters 39-42 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 123, characters 39-42:
[INFO]: Proof obligation 70 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  <1>4
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 123, characters 39-42:
[INFO]: Proof obligation 70 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  <1>4
(* trying obligation 71 generated from file "./proofs/QuorumIntersection.tla", line 123, characters 45-57 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 123, characters 45-57:
[INFO]: Proof obligation 71 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         <1>4 
  PROVE  SumStakeEmpty
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 123, characters 45-57:
[INFO]: Proof obligation 71 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         <1>4 
  PROVE  SumStakeEmpty
(* trying obligation 72 generated from file "./proofs/QuorumIntersection.tla", line 125, characters 9-10 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 125, characters 9-10:
[INFO]: Proof obligation 72 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         <1>1 ,
         <1>2 ,
         <2>1 ,
         SumStakeNat ,
         ArithmeticHelp ,
         SMT 
  PROVE  0 >= 2 * SlowThreshold - TotalStake
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 125, characters 9-10:
[INFO]: Proof obligation 72 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         <1>1 ,
         <1>2 ,
         <2>1 ,
         SumStakeNat ,
         ArithmeticHelp ,
         SMT 
  PROVE  0 >= 2 * SlowThreshold - TotalStake
(* trying obligation 73 generated from file "./proofs/QuorumIntersection.tla", line 125, characters 12-15 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 125, characters 12-15:
[INFO]: Proof obligation 73 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  <1>1
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 125, characters 12-15:
[INFO]: Proof obligation 73 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  <1>1
(* trying obligation 74 generated from file "./proofs/QuorumIntersection.tla", line 125, characters 18-21 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 125, characters 18-21:
[INFO]: Proof obligation 74 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         <1>1 
  PROVE  <1>2
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 125, characters 18-21:
[INFO]: Proof obligation 74 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         <1>1 
  PROVE  <1>2
(* trying obligation 75 generated from file "./proofs/QuorumIntersection.tla", line 125, characters 24-27 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 125, characters 24-27:
[INFO]: Proof obligation 75 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         <1>1 ,
         <1>2 
  PROVE  <2>1
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 125, characters 24-27:
[INFO]: Proof obligation 75 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         <1>1 ,
         <1>2 
  PROVE  <2>1
(* trying obligation 76 generated from file "./proofs/QuorumIntersection.tla", line 125, characters 30-40 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 125, characters 30-40:
[INFO]: Proof obligation 76 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         <1>1 ,
         <1>2 ,
         <2>1 
  PROVE  SumStakeNat
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 125, characters 30-40:
[INFO]: Proof obligation 76 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         <1>1 ,
         <1>2 ,
         <2>1 
  PROVE  SumStakeNat
(* trying obligation 77 generated from file "./proofs/QuorumIntersection.tla", line 125, characters 43-56 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 125, characters 43-56:
[INFO]: Proof obligation 77 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         <1>1 ,
         <1>2 ,
         <2>1 ,
         SumStakeNat 
  PROVE  ArithmeticHelp
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 125, characters 43-56:
[INFO]: Proof obligation 77 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         <1>1 ,
         <1>2 ,
         <2>1 ,
         SumStakeNat 
  PROVE  ArithmeticHelp
(* trying obligation 78 generated from file "./proofs/QuorumIntersection.tla", line 125, characters 59-61 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 125, characters 59-61:
[INFO]: Proof obligation 78 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         <1>1 ,
         <1>2 ,
         <2>1 ,
         SumStakeNat ,
         ArithmeticHelp 
  PROVE  SMT
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 125, characters 59-61:
[INFO]: Proof obligation 78 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         <1>1 ,
         <1>2 ,
         <2>1 ,
         SumStakeNat ,
         ArithmeticHelp 
  PROVE  SMT
(* trying obligation 79 generated from file "./proofs/QuorumIntersection.tla", line 133, characters 7-8 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 133, characters 7-8:
[INFO]: Proof obligation 79 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         FastIntersection 
  PROVE  \A Q1, Q2 \in SUBSET Validators :
            SumStake(Q1) >= FastThreshold /\ SumStake(Q2) >= FastThreshold
            => Q1 \cap Q2 # {}
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 133, characters 7-8:
[INFO]: Proof obligation 79 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         FastIntersection 
  PROVE  \A Q1, Q2 \in SUBSET Validators :
            SumStake(Q1) >= FastThreshold /\ SumStake(Q2) >= FastThreshold
            => Q1 \cap Q2 # {}
(* trying obligation 80 generated from file "./proofs/QuorumIntersection.tla", line 133, characters 10-25 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 133, characters 10-25:
[INFO]: Proof obligation 80 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake
  PROVE  FastIntersection
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 133, characters 10-25:
[INFO]: Proof obligation 80 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake
  PROVE  FastIntersection
(* trying obligation 81 generated from file "./proofs/QuorumIntersection.tla", line 139, characters 7-8 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 139, characters 7-8:
[INFO]: Proof obligation 81 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         SlowIntersection 
  PROVE  \A Q1, Q2 \in SUBSET Validators :
            SumStake(Q1) >= SlowThreshold /\ SumStake(Q2) >= SlowThreshold
            => Q1 \cap Q2 # {}
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 139, characters 7-8:
[INFO]: Proof obligation 81 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         SlowIntersection 
  PROVE  \A Q1, Q2 \in SUBSET Validators :
            SumStake(Q1) >= SlowThreshold /\ SumStake(Q2) >= SlowThreshold
            => Q1 \cap Q2 # {}
(* trying obligation 82 generated from file "./proofs/QuorumIntersection.tla", line 139, characters 10-25 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 139, characters 10-25:
[INFO]: Proof obligation 82 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake
  PROVE  SlowIntersection
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 139, characters 10-25:
[INFO]: Proof obligation 82 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake
  PROVE  SlowIntersection
(* trying obligation 83 generated from file "./proofs/QuorumIntersection.tla", line 155, characters 5-6 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 155, characters 5-6:
[INFO]: Proof obligation 83 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <1>1 ,
         <1>2 ,
         <1>3 ,
         SumStakeNat ,
         ArithmeticHelp ,
         SMT 
  PROVE  SumStake(Q1 \cap Q2) >= 2 * FastThreshold - TotalStake
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 155, characters 5-6:
[INFO]: Proof obligation 83 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <1>1 ,
         <1>2 ,
         <1>3 ,
         SumStakeNat ,
         ArithmeticHelp ,
         SMT 
  PROVE  SumStake(Q1 \cap Q2) >= 2 * FastThreshold - TotalStake
(* trying obligation 84 generated from file "./proofs/QuorumIntersection.tla", line 155, characters 8-11 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 155, characters 8-11:
[INFO]: Proof obligation 84 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  <1>1
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 155, characters 8-11:
[INFO]: Proof obligation 84 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  <1>1
(* trying obligation 85 generated from file "./proofs/QuorumIntersection.tla", line 155, characters 14-17 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 155, characters 14-17:
[INFO]: Proof obligation 85 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <1>1 
  PROVE  <1>2
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 155, characters 14-17:
[INFO]: Proof obligation 85 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <1>1 
  PROVE  <1>2
(* trying obligation 86 generated from file "./proofs/QuorumIntersection.tla", line 155, characters 20-23 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 155, characters 20-23:
[INFO]: Proof obligation 86 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <1>1 ,
         <1>2 
  PROVE  <1>3
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 155, characters 20-23:
[INFO]: Proof obligation 86 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <1>1 ,
         <1>2 
  PROVE  <1>3
(* trying obligation 87 generated from file "./proofs/QuorumIntersection.tla", line 155, characters 26-36 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 155, characters 26-36:
[INFO]: Proof obligation 87 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <1>1 ,
         <1>2 ,
         <1>3 
  PROVE  SumStakeNat
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 155, characters 26-36:
[INFO]: Proof obligation 87 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <1>1 ,
         <1>2 ,
         <1>3 
  PROVE  SumStakeNat
(* trying obligation 88 generated from file "./proofs/QuorumIntersection.tla", line 155, characters 39-52 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 155, characters 39-52:
[INFO]: Proof obligation 88 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <1>1 ,
         <1>2 ,
         <1>3 ,
         SumStakeNat 
  PROVE  ArithmeticHelp
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 155, characters 39-52:
[INFO]: Proof obligation 88 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <1>1 ,
         <1>2 ,
         <1>3 ,
         SumStakeNat 
  PROVE  ArithmeticHelp
(* trying obligation 89 generated from file "./proofs/QuorumIntersection.tla", line 155, characters 55-57 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 155, characters 55-57:
[INFO]: Proof obligation 89 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <1>1 ,
         <1>2 ,
         <1>3 ,
         SumStakeNat ,
         ArithmeticHelp 
  PROVE  SMT
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 155, characters 55-57:
[INFO]: Proof obligation 89 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <1>1 ,
         <1>2 ,
         <1>3 ,
         SumStakeNat ,
         ArithmeticHelp 
  PROVE  SMT
(* trying obligation 90 generated from file "./proofs/QuorumIntersection.tla", line 149, characters 5-6 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 149, characters 5-6:
[INFO]: Proof obligation 90 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         IntersectionStakeLowerBound 
  PROVE  SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 149, characters 5-6:
[INFO]: Proof obligation 90 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         IntersectionStakeLowerBound 
  PROVE  SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake
(* trying obligation 91 generated from file "./proofs/QuorumIntersection.tla", line 149, characters 8-34 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 149, characters 8-34:
[INFO]: Proof obligation 91 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  IntersectionStakeLowerBound
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 149, characters 8-34:
[INFO]: Proof obligation 91 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  IntersectionStakeLowerBound
(* trying obligation 92 generated from file "./proofs/QuorumIntersection.tla", line 151, characters 5-6 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 151, characters 5-6:
[INFO]: Proof obligation 92 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         DoubleLowerBound ,
         ThresholdBounds ,
         SumStakeNat 
  PROVE  SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 151, characters 5-6:
[INFO]: Proof obligation 92 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         DoubleLowerBound ,
         ThresholdBounds ,
         SumStakeNat 
  PROVE  SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold
(* trying obligation 93 generated from file "./proofs/QuorumIntersection.tla", line 151, characters 8-23 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 151, characters 8-23:
[INFO]: Proof obligation 93 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  DoubleLowerBound
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 151, characters 8-23:
[INFO]: Proof obligation 93 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  DoubleLowerBound
(* trying obligation 94 generated from file "./proofs/QuorumIntersection.tla", line 151, characters 26-40 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 151, characters 26-40:
[INFO]: Proof obligation 94 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         DoubleLowerBound 
  PROVE  ThresholdBounds
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 151, characters 26-40:
[INFO]: Proof obligation 94 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         DoubleLowerBound 
  PROVE  ThresholdBounds
(* trying obligation 95 generated from file "./proofs/QuorumIntersection.tla", line 151, characters 43-53 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 151, characters 43-53:
[INFO]: Proof obligation 95 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         DoubleLowerBound ,
         ThresholdBounds 
  PROVE  SumStakeNat
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 151, characters 43-53:
[INFO]: Proof obligation 95 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         DoubleLowerBound ,
         ThresholdBounds 
  PROVE  SumStakeNat
(* trying obligation 96 generated from file "./proofs/QuorumIntersection.tla", line 153, characters 5-6 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 153, characters 5-6:
[INFO]: Proof obligation 96 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         ThresholdBounds 
  PROVE  2 * FastThreshold > TotalStake
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 153, characters 5-6:
[INFO]: Proof obligation 96 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         ThresholdBounds 
  PROVE  2 * FastThreshold > TotalStake
(* trying obligation 97 generated from file "./proofs/QuorumIntersection.tla", line 153, characters 8-22 *)
<unknown location>:
[INFO]: Proof obligation before `find_meth`:

File "./proofs/QuorumIntersection.tla", line 153, characters 8-22:
[INFO]: Proof obligation 97 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  ThresholdBounds
<unknown location>:
[INFO]: Proof obligation after `find_meth`:

File "./proofs/QuorumIntersection.tla", line 153, characters 8-22:
[INFO]: Proof obligation 97 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  ThresholdBounds
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 58, characters 10-12:
[INFO]: Proof obligation 2 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake
  PROVE  SMT
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 76, characters 5-6:
[INFO]: Proof obligation 3 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         <1>4 ,
         <1>5 ,
         ArithmeticHelp ,
         SMT 
  PROVE  SumStake(S1 \cap S2) >= SumStake(S1) + SumStake(S2) - TotalStake
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 76, characters 5-6:
[INFO]: Proof obligation 3 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         SumStake(S1) + SumStake(S2) =< TotalStake + SumStake(S1 \cap S2) ,
         SumStake(S1) \in Nat /\ SumStake(S2) \in Nat /\ TotalStake \in Nat ,
         \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c ,
         TRUE 
  PROVE  SumStake(S1 \cap S2) >= SumStake(S1) + SumStake(S2) - TotalStake
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 76, characters 5-6:
[INFO]: Proof obligation 3 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         SumStake(S1) + SumStake(S2) =< TotalStake + SumStake(S1 \cap S2) ,
         SumStake(S1) \in Nat /\ SumStake(S2) \in Nat /\ TotalStake \in Nat ,
         \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c ,
         TRUE 
  PROVE  SumStake(S1 \cap S2) >= SumStake(S1) + SumStake(S2) - TotalStake
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 76, characters 5-6:
[INFO]: Proof obligation 3 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         SumStake(S1) + SumStake(S2) =< TotalStake + SumStake(S1 \cap S2) ,
         SumStake(S1) \in Nat /\ SumStake(S2) \in Nat /\ TotalStake \in Nat ,
         \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c ,
         TRUE 
  PROVE  SumStake(S1 \cap S2) >= SumStake(S1) + SumStake(S2) - TotalStake
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 76, characters 5-6:
[INFO]: Proof obligation 3 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         SumStake(S1) + SumStake(S2) =< TotalStake + SumStake(S1 \cap S2) ,
         SumStake(S1) \in Nat /\ SumStake(S2) \in Nat /\ TotalStake \in Nat ,
         \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c ,
         TRUE 
  PROVE  SumStake(S1 \cap S2) >= SumStake(S1) + SumStake(S2) - TotalStake
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 76, characters 8-11:
[INFO]: Proof obligation 4 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators
  PROVE  <1>4
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 76, characters 8-11:
[INFO]: Proof obligation 4 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators
  PROVE  SumStake(S1) + SumStake(S2) =< TotalStake + SumStake(S1 \cap S2)
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 76, characters 8-11:
[INFO]: Proof obligation 4 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators
  PROVE  SumStake(S1) + SumStake(S2) =< TotalStake + SumStake(S1 \cap S2)
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 76, characters 8-11:
[INFO]: Proof obligation 4 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators
  PROVE  SumStake(S1) + SumStake(S2) =< TotalStake + SumStake(S1 \cap S2)
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 76, characters 8-11:
[INFO]: Proof obligation 4 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators
  PROVE  SumStake(S1) + SumStake(S2) =< TotalStake + SumStake(S1 \cap S2)
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 76, characters 14-17:
[INFO]: Proof obligation 5 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         <1>4 
  PROVE  <1>5
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 76, characters 14-17:
[INFO]: Proof obligation 5 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         SumStake(S1) + SumStake(S2) =< TotalStake + SumStake(S1 \cap S2) 
  PROVE  SumStake(S1) \in Nat /\ SumStake(S2) \in Nat /\ TotalStake \in Nat
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 76, characters 14-17:
[INFO]: Proof obligation 5 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         SumStake(S1) + SumStake(S2) =< TotalStake + SumStake(S1 \cap S2) 
  PROVE  SumStake(S1) \in Nat /\ SumStake(S2) \in Nat /\ TotalStake \in Nat
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 76, characters 14-17:
[INFO]: Proof obligation 5 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         SumStake(S1) + SumStake(S2) =< TotalStake + SumStake(S1 \cap S2) 
  PROVE  SumStake(S1) \in Nat /\ SumStake(S2) \in Nat /\ TotalStake \in Nat
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 76, characters 14-17:
[INFO]: Proof obligation 5 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         SumStake(S1) + SumStake(S2) =< TotalStake + SumStake(S1 \cap S2) 
  PROVE  SumStake(S1) \in Nat /\ SumStake(S2) \in Nat /\ TotalStake \in Nat
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 76, characters 20-33:
[INFO]: Proof obligation 6 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         <1>4 ,
         <1>5 
  PROVE  ArithmeticHelp
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 76, characters 20-33:
[INFO]: Proof obligation 6 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         SumStake(S1) + SumStake(S2) =< TotalStake + SumStake(S1 \cap S2) ,
         SumStake(S1) \in Nat /\ SumStake(S2) \in Nat /\ TotalStake \in Nat 
  PROVE  \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 76, characters 20-33:
[INFO]: Proof obligation 6 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         SumStake(S1) + SumStake(S2) =< TotalStake + SumStake(S1 \cap S2) ,
         SumStake(S1) \in Nat /\ SumStake(S2) \in Nat /\ TotalStake \in Nat 
  PROVE  \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 76, characters 20-33:
[INFO]: Proof obligation 6 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         SumStake(S1) + SumStake(S2) =< TotalStake + SumStake(S1 \cap S2) ,
         SumStake(S1) \in Nat /\ SumStake(S2) \in Nat /\ TotalStake \in Nat 
  PROVE  \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 76, characters 20-33:
[INFO]: Proof obligation 6 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         SumStake(S1) + SumStake(S2) =< TotalStake + SumStake(S1 \cap S2) ,
         SumStake(S1) \in Nat /\ SumStake(S2) \in Nat /\ TotalStake \in Nat 
  PROVE  \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 76, characters 36-38:
[INFO]: Proof obligation 7 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         <1>4 ,
         <1>5 ,
         ArithmeticHelp 
  PROVE  SMT
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 66, characters 8-20:
[INFO]: Proof obligation 9 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators
  PROVE  SumStakeUnion
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 66, characters 8-20:
[INFO]: Proof obligation 9 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators
  PROVE  \A S1_1, S2_1 \in SUBSET Validators :
            SumStake(S1_1) + SumStake(S2_1)
            = SumStake(S1_1 \cup S2_1) + SumStake(S1_1 \cap S2_1)
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 66, characters 8-20:
[INFO]: Proof obligation 9 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators
  PROVE  \A S1_1, S2_1 \in SUBSET Validators :
            SumStake(S1_1) + SumStake(S2_1)
            = SumStake(S1_1 \cup S2_1) + SumStake(S1_1 \cap S2_1)
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 66, characters 8-20:
[INFO]: Proof obligation 9 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators
  PROVE  \A S1_1, S2_1 \in SUBSET Validators :
            SumStake(S1_1) + SumStake(S2_1)
            = SumStake(S1_1 \cup S2_1) + SumStake(S1_1 \cap S2_1)
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 66, characters 8-20:
[INFO]: Proof obligation 9 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators
  PROVE  \A S1_1, S2_1 \in SUBSET Validators :
            SumStake(S1_1) + SumStake(S2_1)
            = SumStake(S1_1 \cup S2_1) + SumStake(S1_1 \cap S2_1)
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 68, characters 8-20:
[INFO]: Proof obligation 11 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators
  PROVE  SumStakeBound
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 68, characters 8-20:
[INFO]: Proof obligation 11 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators
  PROVE  \A S \in SUBSET Validators : SumStake(S) =< TotalStake
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 68, characters 8-20:
[INFO]: Proof obligation 11 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators
  PROVE  \A S \in SUBSET Validators : SumStake(S) =< TotalStake
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 68, characters 8-20:
[INFO]: Proof obligation 11 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators
  PROVE  \A S \in SUBSET Validators : SumStake(S) =< TotalStake
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 68, characters 8-20:
[INFO]: Proof obligation 11 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators
  PROVE  \A S \in SUBSET Validators : SumStake(S) =< TotalStake
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 70, characters 8-18:
[INFO]: Proof obligation 13 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators
  PROVE  SumStakeNat
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 70, characters 8-18:
[INFO]: Proof obligation 13 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators
  PROVE  \A S \in SUBSET Validators : SumStake(S) \in Nat
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 70, characters 8-18:
[INFO]: Proof obligation 13 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators
  PROVE  \A S \in SUBSET Validators : SumStake(S) \in Nat
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 70, characters 8-18:
[INFO]: Proof obligation 13 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators
  PROVE  \A S \in SUBSET Validators : SumStake(S) \in Nat
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 70, characters 8-18:
[INFO]: Proof obligation 13 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators
  PROVE  \A S \in SUBSET Validators : SumStake(S) \in Nat
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 72, characters 5-6:
[INFO]: Proof obligation 14 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         <1>1 ,
         <1>2 ,
         <1>3 ,
         ArithmeticHelp ,
         SMT 
  PROVE  SumStake(S1) + SumStake(S2) =< TotalStake + SumStake(S1 \cap S2)
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 72, characters 5-6:
[INFO]: Proof obligation 14 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         SumStake(S1) + SumStake(S2)
         = SumStake(S1 \cup S2) + SumStake(S1 \cap S2) ,
         SumStake(S1 \cup S2) =< TotalStake ,
         SumStake(S1 \cup S2) \in Nat /\ SumStake(S1 \cap S2) \in Nat ,
         \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c ,
         TRUE 
  PROVE  SumStake(S1) + SumStake(S2) =< TotalStake + SumStake(S1 \cap S2)
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 72, characters 5-6:
[INFO]: Proof obligation 14 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         SumStake(S1) + SumStake(S2)
         = SumStake(S1 \cup S2) + SumStake(S1 \cap S2) ,
         SumStake(S1 \cup S2) =< TotalStake ,
         SumStake(S1 \cup S2) \in Nat /\ SumStake(S1 \cap S2) \in Nat ,
         \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c ,
         TRUE 
  PROVE  SumStake(S1) + SumStake(S2) =< TotalStake + SumStake(S1 \cap S2)
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 72, characters 5-6:
[INFO]: Proof obligation 14 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         SumStake(S1) + SumStake(S2)
         = SumStake(S1 \cup S2) + SumStake(S1 \cap S2) ,
         SumStake(S1 \cup S2) =< TotalStake ,
         SumStake(S1 \cup S2) \in Nat /\ SumStake(S1 \cap S2) \in Nat ,
         \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c ,
         TRUE 
  PROVE  SumStake(S1) + SumStake(S2) =< TotalStake + SumStake(S1 \cap S2)
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 72, characters 5-6:
[INFO]: Proof obligation 14 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         SumStake(S1) + SumStake(S2)
         = SumStake(S1 \cup S2) + SumStake(S1 \cap S2) ,
         SumStake(S1 \cup S2) =< TotalStake ,
         SumStake(S1 \cup S2) \in Nat /\ SumStake(S1 \cap S2) \in Nat ,
         \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c ,
         TRUE 
  PROVE  SumStake(S1) + SumStake(S2) =< TotalStake + SumStake(S1 \cap S2)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 72, characters 8-11:
[INFO]: Proof obligation 15 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators
  PROVE  <1>1
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 72, characters 8-11:
[INFO]: Proof obligation 15 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators
  PROVE  SumStake(S1) + SumStake(S2)
         = SumStake(S1 \cup S2) + SumStake(S1 \cap S2)
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 72, characters 8-11:
[INFO]: Proof obligation 15 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators
  PROVE  SumStake(S1) + SumStake(S2)
         = SumStake(S1 \cup S2) + SumStake(S1 \cap S2)
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 72, characters 8-11:
[INFO]: Proof obligation 15 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators
  PROVE  SumStake(S1) + SumStake(S2)
         = SumStake(S1 \cup S2) + SumStake(S1 \cap S2)
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 72, characters 8-11:
[INFO]: Proof obligation 15 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators
  PROVE  SumStake(S1) + SumStake(S2)
         = SumStake(S1 \cup S2) + SumStake(S1 \cap S2)
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 72, characters 14-17:
[INFO]: Proof obligation 16 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         <1>1 
  PROVE  <1>2
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 72, characters 14-17:
[INFO]: Proof obligation 16 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         SumStake(S1) + SumStake(S2)
         = SumStake(S1 \cup S2) + SumStake(S1 \cap S2) 
  PROVE  SumStake(S1 \cup S2) =< TotalStake
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 72, characters 14-17:
[INFO]: Proof obligation 16 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         SumStake(S1) + SumStake(S2)
         = SumStake(S1 \cup S2) + SumStake(S1 \cap S2) 
  PROVE  SumStake(S1 \cup S2) =< TotalStake
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 72, characters 14-17:
[INFO]: Proof obligation 16 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         SumStake(S1) + SumStake(S2)
         = SumStake(S1 \cup S2) + SumStake(S1 \cap S2) 
  PROVE  SumStake(S1 \cup S2) =< TotalStake
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 72, characters 14-17:
[INFO]: Proof obligation 16 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         SumStake(S1) + SumStake(S2)
         = SumStake(S1 \cup S2) + SumStake(S1 \cap S2) 
  PROVE  SumStake(S1 \cup S2) =< TotalStake
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 72, characters 20-23:
[INFO]: Proof obligation 17 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         <1>1 ,
         <1>2 
  PROVE  <1>3
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 72, characters 20-23:
[INFO]: Proof obligation 17 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         SumStake(S1) + SumStake(S2)
         = SumStake(S1 \cup S2) + SumStake(S1 \cap S2) ,
         SumStake(S1 \cup S2) =< TotalStake 
  PROVE  SumStake(S1 \cup S2) \in Nat /\ SumStake(S1 \cap S2) \in Nat
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 72, characters 20-23:
[INFO]: Proof obligation 17 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         SumStake(S1) + SumStake(S2)
         = SumStake(S1 \cup S2) + SumStake(S1 \cap S2) ,
         SumStake(S1 \cup S2) =< TotalStake 
  PROVE  SumStake(S1 \cup S2) \in Nat /\ SumStake(S1 \cap S2) \in Nat
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 72, characters 20-23:
[INFO]: Proof obligation 17 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         SumStake(S1) + SumStake(S2)
         = SumStake(S1 \cup S2) + SumStake(S1 \cap S2) ,
         SumStake(S1 \cup S2) =< TotalStake 
  PROVE  SumStake(S1 \cup S2) \in Nat /\ SumStake(S1 \cap S2) \in Nat
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 72, characters 20-23:
[INFO]: Proof obligation 17 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         SumStake(S1) + SumStake(S2)
         = SumStake(S1 \cup S2) + SumStake(S1 \cap S2) ,
         SumStake(S1 \cup S2) =< TotalStake 
  PROVE  SumStake(S1 \cup S2) \in Nat /\ SumStake(S1 \cap S2) \in Nat
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 72, characters 26-39:
[INFO]: Proof obligation 18 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         <1>1 ,
         <1>2 ,
         <1>3 
  PROVE  ArithmeticHelp
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 72, characters 26-39:
[INFO]: Proof obligation 18 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         SumStake(S1) + SumStake(S2)
         = SumStake(S1 \cup S2) + SumStake(S1 \cap S2) ,
         SumStake(S1 \cup S2) =< TotalStake ,
         SumStake(S1 \cup S2) \in Nat /\ SumStake(S1 \cap S2) \in Nat 
  PROVE  \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 72, characters 26-39:
[INFO]: Proof obligation 18 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         SumStake(S1) + SumStake(S2)
         = SumStake(S1 \cup S2) + SumStake(S1 \cap S2) ,
         SumStake(S1 \cup S2) =< TotalStake ,
         SumStake(S1 \cup S2) \in Nat /\ SumStake(S1 \cap S2) \in Nat 
  PROVE  \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 72, characters 26-39:
[INFO]: Proof obligation 18 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         SumStake(S1) + SumStake(S2)
         = SumStake(S1 \cup S2) + SumStake(S1 \cap S2) ,
         SumStake(S1 \cup S2) =< TotalStake ,
         SumStake(S1 \cup S2) \in Nat /\ SumStake(S1 \cap S2) \in Nat 
  PROVE  \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 72, characters 26-39:
[INFO]: Proof obligation 18 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         SumStake(S1) + SumStake(S2)
         = SumStake(S1 \cup S2) + SumStake(S1 \cap S2) ,
         SumStake(S1 \cup S2) =< TotalStake ,
         SumStake(S1 \cup S2) \in Nat /\ SumStake(S1 \cap S2) \in Nat 
  PROVE  \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 72, characters 42-44:
[INFO]: Proof obligation 19 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         <1>1 ,
         <1>2 ,
         <1>3 ,
         ArithmeticHelp 
  PROVE  SMT
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 74, characters 5-6:
[INFO]: Proof obligation 20 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         SumStakeNat 
  PROVE  SumStake(S1) \in Nat /\ SumStake(S2) \in Nat /\ TotalStake \in Nat
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 74, characters 5-6:
[INFO]: Proof obligation 20 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         \A S \in SUBSET Validators : SumStake(S) \in Nat 
  PROVE  SumStake(S1) \in Nat /\ SumStake(S2) \in Nat /\ TotalStake \in Nat
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 74, characters 5-6:
[INFO]: Proof obligation 20 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         \A S \in SUBSET Validators : SumStake(S) \in Nat 
  PROVE  SumStake(S1) \in Nat /\ SumStake(S2) \in Nat /\ TotalStake \in Nat
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 74, characters 5-6:
[INFO]: Proof obligation 20 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         \A S \in SUBSET Validators : SumStake(S) \in Nat 
  PROVE  SumStake(S1) \in Nat /\ SumStake(S2) \in Nat /\ TotalStake \in Nat
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 74, characters 5-6:
[INFO]: Proof obligation 20 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators,
         \A S \in SUBSET Validators : SumStake(S) \in Nat 
  PROVE  SumStake(S1) \in Nat /\ SumStake(S2) \in Nat /\ TotalStake \in Nat
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 74, characters 8-18:
[INFO]: Proof obligation 21 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators
  PROVE  SumStakeNat
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 74, characters 8-18:
[INFO]: Proof obligation 21 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators
  PROVE  \A S \in SUBSET Validators : SumStake(S) \in Nat
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 74, characters 8-18:
[INFO]: Proof obligation 21 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators
  PROVE  \A S \in SUBSET Validators : SumStake(S) \in Nat
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 74, characters 8-18:
[INFO]: Proof obligation 21 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators
  PROVE  \A S \in SUBSET Validators : SumStake(S) \in Nat
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 74, characters 8-18:
[INFO]: Proof obligation 21 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT S1 \in SUBSET Validators,
         NEW CONSTANT S2 \in SUBSET Validators
  PROVE  \A S \in SUBSET Validators : SumStake(S) \in Nat
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 85, characters 10-23:
[INFO]: Proof obligation 23 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT a \in Nat,
         NEW CONSTANT b \in Nat,
         NEW CONSTANT c \in Nat,
         a >= c ,
         b >= c 
  PROVE  ArithmeticHelp
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 85, characters 10-23:
[INFO]: Proof obligation 23 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT a \in Nat,
         NEW CONSTANT b \in Nat,
         NEW CONSTANT c \in Nat,
         a >= c ,
         b >= c 
  PROVE  \A a_1, b_1, c_1 \in Nat :
            /\ a_1 + b_1 >= c_1 => a_1 >= c_1 - b_1
            /\ a_1 >= b_1 + c_1 /\ c_1 > 0 => a_1 > b_1
            /\ a_1 >= c_1 /\ b_1 >= c_1 => a_1 + b_1 >= 2 * c_1
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 85, characters 10-23:
[INFO]: Proof obligation 23 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT a \in Nat,
         NEW CONSTANT b \in Nat,
         NEW CONSTANT c \in Nat,
         a >= c ,
         b >= c 
  PROVE  \A a_1, b_1, c_1 \in Nat :
            /\ a_1 + b_1 >= c_1 => a_1 >= c_1 - b_1
            /\ a_1 >= b_1 + c_1 /\ c_1 > 0 => a_1 > b_1
            /\ a_1 >= c_1 /\ b_1 >= c_1 => a_1 + b_1 >= 2 * c_1
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 85, characters 10-23:
[INFO]: Proof obligation 23 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT a \in Nat,
         NEW CONSTANT b \in Nat,
         NEW CONSTANT c \in Nat,
         a >= c ,
         b >= c 
  PROVE  \A a_1, b_1, c_1 \in Nat :
            /\ a_1 + b_1 >= c_1 => a_1 >= c_1 - b_1
            /\ a_1 >= b_1 + c_1 /\ c_1 > 0 => a_1 > b_1
            /\ a_1 >= c_1 /\ b_1 >= c_1 => a_1 + b_1 >= 2 * c_1
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 85, characters 10-23:
[INFO]: Proof obligation 23 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT a \in Nat,
         NEW CONSTANT b \in Nat,
         NEW CONSTANT c \in Nat,
         a >= c ,
         b >= c 
  PROVE  \A a_1, b_1, c_1 \in Nat :
            /\ a_1 + b_1 >= c_1 => a_1 >= c_1 - b_1
            /\ a_1 >= b_1 + c_1 /\ c_1 > 0 => a_1 > b_1
            /\ a_1 >= c_1 /\ b_1 >= c_1 => a_1 + b_1 >= 2 * c_1
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 85, characters 26-28:
[INFO]: Proof obligation 24 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT a \in Nat,
         NEW CONSTANT b \in Nat,
         NEW CONSTANT c \in Nat,
         a >= c ,
         b >= c ,
         ArithmeticHelp 
  PROVE  SMT
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 106, characters 16-19:
[INFO]: Proof obligation 26 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  <1>4
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 106, characters 16-19:
[INFO]: Proof obligation 26 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  ASSUME Q1 \cap Q2 = {} 
         PROVE  FALSE
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 106, characters 16-19:
[INFO]: Proof obligation 26 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  ASSUME Q1 \cap Q2 = {} 
         PROVE  FALSE
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 106, characters 16-19:
[INFO]: Proof obligation 26 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  ASSUME Q1 \cap Q2 = {} 
         PROVE  FALSE
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 106, characters 16-19:
[INFO]: Proof obligation 26 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  ASSUME Q1 \cap Q2 = {} 
         PROVE  FALSE
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 95, characters 8-34:
[INFO]: Proof obligation 28 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  IntersectionStakeLowerBound
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 95, characters 8-34:
[INFO]: Proof obligation 28 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  ASSUME NEW CONSTANT S1 \in SUBSET Validators,
                NEW CONSTANT S2 \in SUBSET Validators
         PROVE  SumStake(S1 \cap S2)
                >= SumStake(S1) + SumStake(S2) - TotalStake
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 95, characters 8-34:
[INFO]: Proof obligation 28 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  ASSUME NEW CONSTANT S1 \in SUBSET Validators,
                NEW CONSTANT S2 \in SUBSET Validators
         PROVE  SumStake(S1 \cap S2)
                >= SumStake(S1) + SumStake(S2) - TotalStake
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 95, characters 8-34:
[INFO]: Proof obligation 28 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  ASSUME NEW CONSTANT S1 \in SUBSET Validators,
                NEW CONSTANT S2 \in SUBSET Validators
         PROVE  SumStake(S1 \cap S2)
                >= SumStake(S1) + SumStake(S2) - TotalStake
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 95, characters 8-34:
[INFO]: Proof obligation 28 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  ASSUME NEW CONSTANT S1 \in SUBSET Validators,
                NEW CONSTANT S2 \in SUBSET Validators
         PROVE  SumStake(S1 \cap S2)
                >= SumStake(S1) + SumStake(S2) - TotalStake
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 97, characters 8-23:
[INFO]: Proof obligation 30 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  DoubleLowerBound
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 97, characters 8-23:
[INFO]: Proof obligation 30 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  ASSUME NEW CONSTANT a \in Nat,
                NEW CONSTANT b \in Nat,
                NEW CONSTANT c \in Nat,
                a >= c ,
                b >= c 
         PROVE  a + b >= 2 * c
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 97, characters 8-23:
[INFO]: Proof obligation 30 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  ASSUME NEW CONSTANT a \in Nat,
                NEW CONSTANT b \in Nat,
                NEW CONSTANT c \in Nat,
                a >= c ,
                b >= c 
         PROVE  a + b >= 2 * c
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 97, characters 8-23:
[INFO]: Proof obligation 30 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  ASSUME NEW CONSTANT a \in Nat,
                NEW CONSTANT b \in Nat,
                NEW CONSTANT c \in Nat,
                a >= c ,
                b >= c 
         PROVE  a + b >= 2 * c
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 97, characters 8-23:
[INFO]: Proof obligation 30 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  ASSUME NEW CONSTANT a \in Nat,
                NEW CONSTANT b \in Nat,
                NEW CONSTANT c \in Nat,
                a >= c ,
                b >= c 
         PROVE  a + b >= 2 * c
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 97, characters 26-40:
[INFO]: Proof obligation 31 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         DoubleLowerBound 
  PROVE  ThresholdBounds
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 97, characters 26-40:
[INFO]: Proof obligation 31 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         ASSUME NEW CONSTANT a \in Nat,
                NEW CONSTANT b \in Nat,
                NEW CONSTANT c \in Nat,
                a >= c ,
                b >= c 
         PROVE  a + b >= 2 * c 
  PROVE  /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 97, characters 26-40:
[INFO]: Proof obligation 31 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         ASSUME NEW CONSTANT a \in Nat,
                NEW CONSTANT b \in Nat,
                NEW CONSTANT c \in Nat,
                a >= c ,
                b >= c 
         PROVE  a + b >= 2 * c 
  PROVE  /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 97, characters 26-40:
[INFO]: Proof obligation 31 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         ASSUME NEW CONSTANT a \in Nat,
                NEW CONSTANT b \in Nat,
                NEW CONSTANT c \in Nat,
                a >= c ,
                b >= c 
         PROVE  a + b >= 2 * c 
  PROVE  /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 97, characters 26-40:
[INFO]: Proof obligation 31 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         ASSUME NEW CONSTANT a \in Nat,
                NEW CONSTANT b \in Nat,
                NEW CONSTANT c \in Nat,
                a >= c ,
                b >= c 
         PROVE  a + b >= 2 * c 
  PROVE  /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 97, characters 43-53:
[INFO]: Proof obligation 32 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         DoubleLowerBound ,
         ThresholdBounds 
  PROVE  SumStakeNat
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 97, characters 43-53:
[INFO]: Proof obligation 32 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         ASSUME NEW CONSTANT a \in Nat,
                NEW CONSTANT b \in Nat,
                NEW CONSTANT c \in Nat,
                a >= c ,
                b >= c 
         PROVE  a + b >= 2 * c ,
         /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake 
  PROVE  \A S \in SUBSET Validators : SumStake(S) \in Nat
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 97, characters 43-53:
[INFO]: Proof obligation 32 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         ASSUME NEW CONSTANT a \in Nat,
                NEW CONSTANT b \in Nat,
                NEW CONSTANT c \in Nat,
                a >= c ,
                b >= c 
         PROVE  a + b >= 2 * c ,
         /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake 
  PROVE  \A S \in SUBSET Validators : SumStake(S) \in Nat
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 97, characters 43-53:
[INFO]: Proof obligation 32 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         ASSUME NEW CONSTANT a \in Nat,
                NEW CONSTANT b \in Nat,
                NEW CONSTANT c \in Nat,
                a >= c ,
                b >= c 
         PROVE  a + b >= 2 * c ,
         /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake 
  PROVE  \A S \in SUBSET Validators : SumStake(S) \in Nat
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 97, characters 43-53:
[INFO]: Proof obligation 32 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         ASSUME NEW CONSTANT a \in Nat,
                NEW CONSTANT b \in Nat,
                NEW CONSTANT c \in Nat,
                a >= c ,
                b >= c 
         PROVE  a + b >= 2 * c ,
         /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake 
  PROVE  \A S \in SUBSET Validators : SumStake(S) \in Nat
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 99, characters 5-6:
[INFO]: Proof obligation 33 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         ThresholdBounds ,
         ArithmeticHelp ,
         SMT 
  PROVE  2 * FastThreshold - TotalStake > 0
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 99, characters 5-6:
[INFO]: Proof obligation 33 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake ,
         \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c ,
         TRUE 
  PROVE  2 * FastThreshold - TotalStake > 0
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 99, characters 5-6:
[INFO]: Proof obligation 33 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake ,
         \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c ,
         TRUE 
  PROVE  2 * FastThreshold - TotalStake > 0
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 99, characters 5-6:
[INFO]: Proof obligation 33 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake ,
         \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c ,
         TRUE 
  PROVE  2 * FastThreshold - TotalStake > 0
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 99, characters 5-6:
[INFO]: Proof obligation 33 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake ,
         \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c ,
         TRUE 
  PROVE  2 * FastThreshold - TotalStake > 0
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 99, characters 8-22:
[INFO]: Proof obligation 34 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  ThresholdBounds
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 99, characters 8-22:
[INFO]: Proof obligation 34 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 99, characters 8-22:
[INFO]: Proof obligation 34 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 99, characters 8-22:
[INFO]: Proof obligation 34 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 99, characters 8-22:
[INFO]: Proof obligation 34 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 99, characters 25-38:
[INFO]: Proof obligation 35 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         ThresholdBounds 
  PROVE  ArithmeticHelp
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 99, characters 25-38:
[INFO]: Proof obligation 35 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake 
  PROVE  \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 99, characters 25-38:
[INFO]: Proof obligation 35 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake 
  PROVE  \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 99, characters 25-38:
[INFO]: Proof obligation 35 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake 
  PROVE  \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 99, characters 25-38:
[INFO]: Proof obligation 35 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake 
  PROVE  \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 99, characters 41-43:
[INFO]: Proof obligation 36 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         ThresholdBounds ,
         ArithmeticHelp 
  PROVE  SMT
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 105, characters 15-16:
[INFO]: Proof obligation 37 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <2>2 ,
         <1>3 ,
         ArithmeticHelp ,
         SMT 
  PROVE  FALSE
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 105, characters 15-16:
[INFO]: Proof obligation 37 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         0 >= 2 * FastThreshold - TotalStake ,
         2 * FastThreshold - TotalStake > 0 ,
         \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c ,
         TRUE 
  PROVE  FALSE
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 105, characters 15-16:
[INFO]: Proof obligation 37 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         0 >= 2 * FastThreshold - TotalStake ,
         2 * FastThreshold - TotalStake > 0 ,
         \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c ,
         TRUE 
  PROVE  FALSE
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 105, characters 15-16:
[INFO]: Proof obligation 37 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         0 >= 2 * FastThreshold - TotalStake ,
         2 * FastThreshold - TotalStake > 0 ,
         \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c ,
         TRUE 
  PROVE  FALSE
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 105, characters 15-16:
[INFO]: Proof obligation 37 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         0 >= 2 * FastThreshold - TotalStake ,
         2 * FastThreshold - TotalStake > 0 ,
         \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c ,
         TRUE 
  PROVE  FALSE
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 105, characters 18-21:
[INFO]: Proof obligation 38 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  <2>2
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 105, characters 18-21:
[INFO]: Proof obligation 38 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  0 >= 2 * FastThreshold - TotalStake
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 105, characters 18-21:
[INFO]: Proof obligation 38 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  0 >= 2 * FastThreshold - TotalStake
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 105, characters 18-21:
[INFO]: Proof obligation 38 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  0 >= 2 * FastThreshold - TotalStake
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 105, characters 18-21:
[INFO]: Proof obligation 38 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  0 >= 2 * FastThreshold - TotalStake
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 105, characters 24-27:
[INFO]: Proof obligation 39 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <2>2 
  PROVE  <1>3
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 105, characters 24-27:
[INFO]: Proof obligation 39 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         0 >= 2 * FastThreshold - TotalStake 
  PROVE  2 * FastThreshold - TotalStake > 0
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 105, characters 24-27:
[INFO]: Proof obligation 39 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         0 >= 2 * FastThreshold - TotalStake 
  PROVE  2 * FastThreshold - TotalStake > 0
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 105, characters 24-27:
[INFO]: Proof obligation 39 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         0 >= 2 * FastThreshold - TotalStake 
  PROVE  2 * FastThreshold - TotalStake > 0
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 105, characters 24-27:
[INFO]: Proof obligation 39 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         0 >= 2 * FastThreshold - TotalStake 
  PROVE  2 * FastThreshold - TotalStake > 0
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 105, characters 30-43:
[INFO]: Proof obligation 40 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <2>2 ,
         <1>3 
  PROVE  ArithmeticHelp
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 105, characters 30-43:
[INFO]: Proof obligation 40 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         0 >= 2 * FastThreshold - TotalStake ,
         2 * FastThreshold - TotalStake > 0 
  PROVE  \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 105, characters 30-43:
[INFO]: Proof obligation 40 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         0 >= 2 * FastThreshold - TotalStake ,
         2 * FastThreshold - TotalStake > 0 
  PROVE  \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 105, characters 30-43:
[INFO]: Proof obligation 40 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         0 >= 2 * FastThreshold - TotalStake ,
         2 * FastThreshold - TotalStake > 0 
  PROVE  \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 105, characters 30-43:
[INFO]: Proof obligation 40 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         0 >= 2 * FastThreshold - TotalStake ,
         2 * FastThreshold - TotalStake > 0 
  PROVE  \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 105, characters 46-48:
[INFO]: Proof obligation 41 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <2>2 ,
         <1>3 ,
         ArithmeticHelp 
  PROVE  SMT
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 102, characters 39-42:
[INFO]: Proof obligation 43 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  <1>4
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 102, characters 39-42:
[INFO]: Proof obligation 43 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  Q1 \cap Q2 = {}
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 102, characters 39-42:
[INFO]: Proof obligation 43 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  Q1 \cap Q2 = {}
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 102, characters 39-42:
[INFO]: Proof obligation 43 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  Q1 \cap Q2 = {}
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 102, characters 39-42:
[INFO]: Proof obligation 43 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  Q1 \cap Q2 = {}
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 102, characters 45-57:
[INFO]: Proof obligation 44 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <1>4 
  PROVE  SumStakeEmpty
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 102, characters 45-57:
[INFO]: Proof obligation 44 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         Q1 \cap Q2 = {} 
  PROVE  SumStake({}) = 0
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 102, characters 45-57:
[INFO]: Proof obligation 44 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         Q1 \cap Q2 = {} 
  PROVE  SumStake({}) = 0
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 102, characters 45-57:
[INFO]: Proof obligation 44 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         Q1 \cap Q2 = {} 
  PROVE  SumStake({}) = 0
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 102, characters 45-57:
[INFO]: Proof obligation 44 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         Q1 \cap Q2 = {} 
  PROVE  SumStake({}) = 0
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 104, characters 9-10:
[INFO]: Proof obligation 45 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <1>1 ,
         <1>2 ,
         <2>1 ,
         SumStakeNat ,
         ArithmeticHelp ,
         SMT 
  PROVE  0 >= 2 * FastThreshold - TotalStake
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 104, characters 9-10:
[INFO]: Proof obligation 45 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold ,
         SumStake(Q1 \cap Q2) = 0 ,
         \A S \in SUBSET Validators : SumStake(S) \in Nat ,
         \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c ,
         TRUE 
  PROVE  0 >= 2 * FastThreshold - TotalStake
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 104, characters 9-10:
[INFO]: Proof obligation 45 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold ,
         SumStake(Q1 \cap Q2) = 0 ,
         \A S \in SUBSET Validators : SumStake(S) \in Nat ,
         \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c ,
         TRUE 
  PROVE  0 >= 2 * FastThreshold - TotalStake
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 104, characters 9-10:
[INFO]: Proof obligation 45 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold ,
         SumStake(Q1 \cap Q2) = 0 ,
         \A S \in SUBSET Validators : SumStake(S) \in Nat ,
         \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c ,
         TRUE 
  PROVE  0 >= 2 * FastThreshold - TotalStake
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 104, characters 9-10:
[INFO]: Proof obligation 45 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold ,
         SumStake(Q1 \cap Q2) = 0 ,
         \A S \in SUBSET Validators : SumStake(S) \in Nat ,
         \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c ,
         TRUE 
  PROVE  0 >= 2 * FastThreshold - TotalStake
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 104, characters 12-15:
[INFO]: Proof obligation 46 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  <1>1
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 104, characters 12-15:
[INFO]: Proof obligation 46 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 104, characters 12-15:
[INFO]: Proof obligation 46 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 104, characters 12-15:
[INFO]: Proof obligation 46 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 104, characters 12-15:
[INFO]: Proof obligation 46 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 104, characters 18-21:
[INFO]: Proof obligation 47 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <1>1 
  PROVE  <1>2
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 104, characters 18-21:
[INFO]: Proof obligation 47 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake 
  PROVE  SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 104, characters 18-21:
[INFO]: Proof obligation 47 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake 
  PROVE  SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 104, characters 18-21:
[INFO]: Proof obligation 47 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake 
  PROVE  SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 104, characters 18-21:
[INFO]: Proof obligation 47 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake 
  PROVE  SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 104, characters 24-27:
[INFO]: Proof obligation 48 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <1>1 ,
         <1>2 
  PROVE  <2>1
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 104, characters 24-27:
[INFO]: Proof obligation 48 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold 
  PROVE  SumStake(Q1 \cap Q2) = 0
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 104, characters 24-27:
[INFO]: Proof obligation 48 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold 
  PROVE  SumStake(Q1 \cap Q2) = 0
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 104, characters 24-27:
[INFO]: Proof obligation 48 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold 
  PROVE  SumStake(Q1 \cap Q2) = 0
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 104, characters 24-27:
[INFO]: Proof obligation 48 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold 
  PROVE  SumStake(Q1 \cap Q2) = 0
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 104, characters 30-40:
[INFO]: Proof obligation 49 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <1>1 ,
         <1>2 ,
         <2>1 
  PROVE  SumStakeNat
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 104, characters 30-40:
[INFO]: Proof obligation 49 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold ,
         SumStake(Q1 \cap Q2) = 0 
  PROVE  \A S \in SUBSET Validators : SumStake(S) \in Nat
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 104, characters 30-40:
[INFO]: Proof obligation 49 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold ,
         SumStake(Q1 \cap Q2) = 0 
  PROVE  \A S \in SUBSET Validators : SumStake(S) \in Nat
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 104, characters 30-40:
[INFO]: Proof obligation 49 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold ,
         SumStake(Q1 \cap Q2) = 0 
  PROVE  \A S \in SUBSET Validators : SumStake(S) \in Nat
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 104, characters 30-40:
[INFO]: Proof obligation 49 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold ,
         SumStake(Q1 \cap Q2) = 0 
  PROVE  \A S \in SUBSET Validators : SumStake(S) \in Nat
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 104, characters 43-56:
[INFO]: Proof obligation 50 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <1>1 ,
         <1>2 ,
         <2>1 ,
         SumStakeNat 
  PROVE  ArithmeticHelp
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 104, characters 43-56:
[INFO]: Proof obligation 50 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold ,
         SumStake(Q1 \cap Q2) = 0 ,
         \A S \in SUBSET Validators : SumStake(S) \in Nat 
  PROVE  \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 104, characters 43-56:
[INFO]: Proof obligation 50 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold ,
         SumStake(Q1 \cap Q2) = 0 ,
         \A S \in SUBSET Validators : SumStake(S) \in Nat 
  PROVE  \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 104, characters 43-56:
[INFO]: Proof obligation 50 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold ,
         SumStake(Q1 \cap Q2) = 0 ,
         \A S \in SUBSET Validators : SumStake(S) \in Nat 
  PROVE  \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 104, characters 43-56:
[INFO]: Proof obligation 50 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold ,
         SumStake(Q1 \cap Q2) = 0 ,
         \A S \in SUBSET Validators : SumStake(S) \in Nat 
  PROVE  \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 104, characters 59-61:
[INFO]: Proof obligation 51 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <1>1 ,
         <1>2 ,
         <2>1 ,
         SumStakeNat ,
         ArithmeticHelp 
  PROVE  SMT
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 127, characters 16-19:
[INFO]: Proof obligation 53 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  <1>4
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 127, characters 16-19:
[INFO]: Proof obligation 53 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  ASSUME Q1 \cap Q2 = {} 
         PROVE  FALSE
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 127, characters 16-19:
[INFO]: Proof obligation 53 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  ASSUME Q1 \cap Q2 = {} 
         PROVE  FALSE
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 127, characters 16-19:
[INFO]: Proof obligation 53 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  ASSUME Q1 \cap Q2 = {} 
         PROVE  FALSE
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 127, characters 16-19:
[INFO]: Proof obligation 53 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  ASSUME Q1 \cap Q2 = {} 
         PROVE  FALSE
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 116, characters 8-34:
[INFO]: Proof obligation 55 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  IntersectionStakeLowerBound
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 116, characters 8-34:
[INFO]: Proof obligation 55 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  ASSUME NEW CONSTANT S1 \in SUBSET Validators,
                NEW CONSTANT S2 \in SUBSET Validators
         PROVE  SumStake(S1 \cap S2)
                >= SumStake(S1) + SumStake(S2) - TotalStake
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 116, characters 8-34:
[INFO]: Proof obligation 55 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  ASSUME NEW CONSTANT S1 \in SUBSET Validators,
                NEW CONSTANT S2 \in SUBSET Validators
         PROVE  SumStake(S1 \cap S2)
                >= SumStake(S1) + SumStake(S2) - TotalStake
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 116, characters 8-34:
[INFO]: Proof obligation 55 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  ASSUME NEW CONSTANT S1 \in SUBSET Validators,
                NEW CONSTANT S2 \in SUBSET Validators
         PROVE  SumStake(S1 \cap S2)
                >= SumStake(S1) + SumStake(S2) - TotalStake
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 116, characters 8-34:
[INFO]: Proof obligation 55 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  ASSUME NEW CONSTANT S1 \in SUBSET Validators,
                NEW CONSTANT S2 \in SUBSET Validators
         PROVE  SumStake(S1 \cap S2)
                >= SumStake(S1) + SumStake(S2) - TotalStake
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 118, characters 8-23:
[INFO]: Proof obligation 57 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  DoubleLowerBound
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 118, characters 8-23:
[INFO]: Proof obligation 57 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  ASSUME NEW CONSTANT a \in Nat,
                NEW CONSTANT b \in Nat,
                NEW CONSTANT c \in Nat,
                a >= c ,
                b >= c 
         PROVE  a + b >= 2 * c
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 118, characters 8-23:
[INFO]: Proof obligation 57 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  ASSUME NEW CONSTANT a \in Nat,
                NEW CONSTANT b \in Nat,
                NEW CONSTANT c \in Nat,
                a >= c ,
                b >= c 
         PROVE  a + b >= 2 * c
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 118, characters 8-23:
[INFO]: Proof obligation 57 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  ASSUME NEW CONSTANT a \in Nat,
                NEW CONSTANT b \in Nat,
                NEW CONSTANT c \in Nat,
                a >= c ,
                b >= c 
         PROVE  a + b >= 2 * c
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 118, characters 8-23:
[INFO]: Proof obligation 57 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  ASSUME NEW CONSTANT a \in Nat,
                NEW CONSTANT b \in Nat,
                NEW CONSTANT c \in Nat,
                a >= c ,
                b >= c 
         PROVE  a + b >= 2 * c
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 118, characters 26-40:
[INFO]: Proof obligation 58 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         DoubleLowerBound 
  PROVE  ThresholdBounds
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 118, characters 26-40:
[INFO]: Proof obligation 58 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         ASSUME NEW CONSTANT a \in Nat,
                NEW CONSTANT b \in Nat,
                NEW CONSTANT c \in Nat,
                a >= c ,
                b >= c 
         PROVE  a + b >= 2 * c 
  PROVE  /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 118, characters 26-40:
[INFO]: Proof obligation 58 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         ASSUME NEW CONSTANT a \in Nat,
                NEW CONSTANT b \in Nat,
                NEW CONSTANT c \in Nat,
                a >= c ,
                b >= c 
         PROVE  a + b >= 2 * c 
  PROVE  /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 118, characters 26-40:
[INFO]: Proof obligation 58 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         ASSUME NEW CONSTANT a \in Nat,
                NEW CONSTANT b \in Nat,
                NEW CONSTANT c \in Nat,
                a >= c ,
                b >= c 
         PROVE  a + b >= 2 * c 
  PROVE  /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 118, characters 26-40:
[INFO]: Proof obligation 58 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         ASSUME NEW CONSTANT a \in Nat,
                NEW CONSTANT b \in Nat,
                NEW CONSTANT c \in Nat,
                a >= c ,
                b >= c 
         PROVE  a + b >= 2 * c 
  PROVE  /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 118, characters 43-53:
[INFO]: Proof obligation 59 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         DoubleLowerBound ,
         ThresholdBounds 
  PROVE  SumStakeNat
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 118, characters 43-53:
[INFO]: Proof obligation 59 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         ASSUME NEW CONSTANT a \in Nat,
                NEW CONSTANT b \in Nat,
                NEW CONSTANT c \in Nat,
                a >= c ,
                b >= c 
         PROVE  a + b >= 2 * c ,
         /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake 
  PROVE  \A S \in SUBSET Validators : SumStake(S) \in Nat
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 118, characters 43-53:
[INFO]: Proof obligation 59 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         ASSUME NEW CONSTANT a \in Nat,
                NEW CONSTANT b \in Nat,
                NEW CONSTANT c \in Nat,
                a >= c ,
                b >= c 
         PROVE  a + b >= 2 * c ,
         /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake 
  PROVE  \A S \in SUBSET Validators : SumStake(S) \in Nat
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 118, characters 43-53:
[INFO]: Proof obligation 59 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         ASSUME NEW CONSTANT a \in Nat,
                NEW CONSTANT b \in Nat,
                NEW CONSTANT c \in Nat,
                a >= c ,
                b >= c 
         PROVE  a + b >= 2 * c ,
         /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake 
  PROVE  \A S \in SUBSET Validators : SumStake(S) \in Nat
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 118, characters 43-53:
[INFO]: Proof obligation 59 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         ASSUME NEW CONSTANT a \in Nat,
                NEW CONSTANT b \in Nat,
                NEW CONSTANT c \in Nat,
                a >= c ,
                b >= c 
         PROVE  a + b >= 2 * c ,
         /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake 
  PROVE  \A S \in SUBSET Validators : SumStake(S) \in Nat
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 120, characters 5-6:
[INFO]: Proof obligation 60 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         ThresholdBounds ,
         ArithmeticHelp ,
         SMT 
  PROVE  2 * SlowThreshold - TotalStake > 0
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 120, characters 5-6:
[INFO]: Proof obligation 60 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake ,
         \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c ,
         TRUE 
  PROVE  2 * SlowThreshold - TotalStake > 0
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 120, characters 5-6:
[INFO]: Proof obligation 60 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake ,
         \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c ,
         TRUE 
  PROVE  2 * SlowThreshold - TotalStake > 0
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 120, characters 5-6:
[INFO]: Proof obligation 60 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake ,
         \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c ,
         TRUE 
  PROVE  2 * SlowThreshold - TotalStake > 0
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 120, characters 5-6:
[INFO]: Proof obligation 60 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake ,
         \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c ,
         TRUE 
  PROVE  2 * SlowThreshold - TotalStake > 0
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 120, characters 8-22:
[INFO]: Proof obligation 61 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  ThresholdBounds
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 120, characters 8-22:
[INFO]: Proof obligation 61 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 120, characters 8-22:
[INFO]: Proof obligation 61 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 120, characters 8-22:
[INFO]: Proof obligation 61 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 120, characters 8-22:
[INFO]: Proof obligation 61 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 120, characters 25-38:
[INFO]: Proof obligation 62 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         ThresholdBounds 
  PROVE  ArithmeticHelp
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 120, characters 25-38:
[INFO]: Proof obligation 62 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake 
  PROVE  \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 120, characters 25-38:
[INFO]: Proof obligation 62 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake 
  PROVE  \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 120, characters 25-38:
[INFO]: Proof obligation 62 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake 
  PROVE  \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 120, characters 25-38:
[INFO]: Proof obligation 62 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake 
  PROVE  \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 120, characters 41-43:
[INFO]: Proof obligation 63 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         ThresholdBounds ,
         ArithmeticHelp 
  PROVE  SMT
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 126, characters 15-16:
[INFO]: Proof obligation 64 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         <2>2 ,
         <1>3 ,
         ArithmeticHelp ,
         SMT 
  PROVE  FALSE
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 126, characters 15-16:
[INFO]: Proof obligation 64 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         0 >= 2 * SlowThreshold - TotalStake ,
         2 * SlowThreshold - TotalStake > 0 ,
         \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c ,
         TRUE 
  PROVE  FALSE
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 126, characters 15-16:
[INFO]: Proof obligation 64 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         0 >= 2 * SlowThreshold - TotalStake ,
         2 * SlowThreshold - TotalStake > 0 ,
         \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c ,
         TRUE 
  PROVE  FALSE
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 126, characters 15-16:
[INFO]: Proof obligation 64 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         0 >= 2 * SlowThreshold - TotalStake ,
         2 * SlowThreshold - TotalStake > 0 ,
         \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c ,
         TRUE 
  PROVE  FALSE
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 126, characters 15-16:
[INFO]: Proof obligation 64 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         0 >= 2 * SlowThreshold - TotalStake ,
         2 * SlowThreshold - TotalStake > 0 ,
         \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c ,
         TRUE 
  PROVE  FALSE
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 126, characters 18-21:
[INFO]: Proof obligation 65 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  <2>2
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 126, characters 18-21:
[INFO]: Proof obligation 65 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  0 >= 2 * SlowThreshold - TotalStake
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 126, characters 18-21:
[INFO]: Proof obligation 65 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  0 >= 2 * SlowThreshold - TotalStake
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 126, characters 18-21:
[INFO]: Proof obligation 65 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  0 >= 2 * SlowThreshold - TotalStake
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 126, characters 18-21:
[INFO]: Proof obligation 65 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  0 >= 2 * SlowThreshold - TotalStake
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 126, characters 24-27:
[INFO]: Proof obligation 66 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         <2>2 
  PROVE  <1>3
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 126, characters 24-27:
[INFO]: Proof obligation 66 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         0 >= 2 * SlowThreshold - TotalStake 
  PROVE  2 * SlowThreshold - TotalStake > 0
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 126, characters 24-27:
[INFO]: Proof obligation 66 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         0 >= 2 * SlowThreshold - TotalStake 
  PROVE  2 * SlowThreshold - TotalStake > 0
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 126, characters 24-27:
[INFO]: Proof obligation 66 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         0 >= 2 * SlowThreshold - TotalStake 
  PROVE  2 * SlowThreshold - TotalStake > 0
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 126, characters 24-27:
[INFO]: Proof obligation 66 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         0 >= 2 * SlowThreshold - TotalStake 
  PROVE  2 * SlowThreshold - TotalStake > 0
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 126, characters 30-43:
[INFO]: Proof obligation 67 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         <2>2 ,
         <1>3 
  PROVE  ArithmeticHelp
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 126, characters 30-43:
[INFO]: Proof obligation 67 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         0 >= 2 * SlowThreshold - TotalStake ,
         2 * SlowThreshold - TotalStake > 0 
  PROVE  \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 126, characters 30-43:
[INFO]: Proof obligation 67 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         0 >= 2 * SlowThreshold - TotalStake ,
         2 * SlowThreshold - TotalStake > 0 
  PROVE  \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 126, characters 30-43:
[INFO]: Proof obligation 67 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         0 >= 2 * SlowThreshold - TotalStake ,
         2 * SlowThreshold - TotalStake > 0 
  PROVE  \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 126, characters 30-43:
[INFO]: Proof obligation 67 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         0 >= 2 * SlowThreshold - TotalStake ,
         2 * SlowThreshold - TotalStake > 0 
  PROVE  \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 126, characters 46-48:
[INFO]: Proof obligation 68 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         <2>2 ,
         <1>3 ,
         ArithmeticHelp 
  PROVE  SMT
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 123, characters 39-42:
[INFO]: Proof obligation 70 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  <1>4
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 123, characters 39-42:
[INFO]: Proof obligation 70 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  Q1 \cap Q2 = {}
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 123, characters 39-42:
[INFO]: Proof obligation 70 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  Q1 \cap Q2 = {}
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 123, characters 39-42:
[INFO]: Proof obligation 70 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  Q1 \cap Q2 = {}
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 123, characters 39-42:
[INFO]: Proof obligation 70 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  Q1 \cap Q2 = {}
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 123, characters 45-57:
[INFO]: Proof obligation 71 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         <1>4 
  PROVE  SumStakeEmpty
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 123, characters 45-57:
[INFO]: Proof obligation 71 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         Q1 \cap Q2 = {} 
  PROVE  SumStake({}) = 0
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 123, characters 45-57:
[INFO]: Proof obligation 71 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         Q1 \cap Q2 = {} 
  PROVE  SumStake({}) = 0
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 123, characters 45-57:
[INFO]: Proof obligation 71 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         Q1 \cap Q2 = {} 
  PROVE  SumStake({}) = 0
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 123, characters 45-57:
[INFO]: Proof obligation 71 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         Q1 \cap Q2 = {} 
  PROVE  SumStake({}) = 0
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 125, characters 9-10:
[INFO]: Proof obligation 72 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         <1>1 ,
         <1>2 ,
         <2>1 ,
         SumStakeNat ,
         ArithmeticHelp ,
         SMT 
  PROVE  0 >= 2 * SlowThreshold - TotalStake
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 125, characters 9-10:
[INFO]: Proof obligation 72 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * SlowThreshold ,
         SumStake(Q1 \cap Q2) = 0 ,
         \A S \in SUBSET Validators : SumStake(S) \in Nat ,
         \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c ,
         TRUE 
  PROVE  0 >= 2 * SlowThreshold - TotalStake
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 125, characters 9-10:
[INFO]: Proof obligation 72 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * SlowThreshold ,
         SumStake(Q1 \cap Q2) = 0 ,
         \A S \in SUBSET Validators : SumStake(S) \in Nat ,
         \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c ,
         TRUE 
  PROVE  0 >= 2 * SlowThreshold - TotalStake
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 125, characters 9-10:
[INFO]: Proof obligation 72 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * SlowThreshold ,
         SumStake(Q1 \cap Q2) = 0 ,
         \A S \in SUBSET Validators : SumStake(S) \in Nat ,
         \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c ,
         TRUE 
  PROVE  0 >= 2 * SlowThreshold - TotalStake
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 125, characters 9-10:
[INFO]: Proof obligation 72 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * SlowThreshold ,
         SumStake(Q1 \cap Q2) = 0 ,
         \A S \in SUBSET Validators : SumStake(S) \in Nat ,
         \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c ,
         TRUE 
  PROVE  0 >= 2 * SlowThreshold - TotalStake
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 125, characters 12-15:
[INFO]: Proof obligation 73 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  <1>1
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 125, characters 12-15:
[INFO]: Proof obligation 73 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 125, characters 12-15:
[INFO]: Proof obligation 73 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 125, characters 12-15:
[INFO]: Proof obligation 73 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 125, characters 12-15:
[INFO]: Proof obligation 73 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold 
  PROVE  SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 125, characters 18-21:
[INFO]: Proof obligation 74 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         <1>1 
  PROVE  <1>2
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 125, characters 18-21:
[INFO]: Proof obligation 74 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake 
  PROVE  SumStake(Q1) + SumStake(Q2) >= 2 * SlowThreshold
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 125, characters 18-21:
[INFO]: Proof obligation 74 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake 
  PROVE  SumStake(Q1) + SumStake(Q2) >= 2 * SlowThreshold
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 125, characters 18-21:
[INFO]: Proof obligation 74 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake 
  PROVE  SumStake(Q1) + SumStake(Q2) >= 2 * SlowThreshold
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 125, characters 18-21:
[INFO]: Proof obligation 74 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake 
  PROVE  SumStake(Q1) + SumStake(Q2) >= 2 * SlowThreshold
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 125, characters 24-27:
[INFO]: Proof obligation 75 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         <1>1 ,
         <1>2 
  PROVE  <2>1
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 125, characters 24-27:
[INFO]: Proof obligation 75 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * SlowThreshold 
  PROVE  SumStake(Q1 \cap Q2) = 0
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 125, characters 24-27:
[INFO]: Proof obligation 75 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * SlowThreshold 
  PROVE  SumStake(Q1 \cap Q2) = 0
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 125, characters 24-27:
[INFO]: Proof obligation 75 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * SlowThreshold 
  PROVE  SumStake(Q1 \cap Q2) = 0
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 125, characters 24-27:
[INFO]: Proof obligation 75 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * SlowThreshold 
  PROVE  SumStake(Q1 \cap Q2) = 0
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 125, characters 30-40:
[INFO]: Proof obligation 76 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         <1>1 ,
         <1>2 ,
         <2>1 
  PROVE  SumStakeNat
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 125, characters 30-40:
[INFO]: Proof obligation 76 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * SlowThreshold ,
         SumStake(Q1 \cap Q2) = 0 
  PROVE  \A S \in SUBSET Validators : SumStake(S) \in Nat
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 125, characters 30-40:
[INFO]: Proof obligation 76 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * SlowThreshold ,
         SumStake(Q1 \cap Q2) = 0 
  PROVE  \A S \in SUBSET Validators : SumStake(S) \in Nat
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 125, characters 30-40:
[INFO]: Proof obligation 76 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * SlowThreshold ,
         SumStake(Q1 \cap Q2) = 0 
  PROVE  \A S \in SUBSET Validators : SumStake(S) \in Nat
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 125, characters 30-40:
[INFO]: Proof obligation 76 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * SlowThreshold ,
         SumStake(Q1 \cap Q2) = 0 
  PROVE  \A S \in SUBSET Validators : SumStake(S) \in Nat
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 125, characters 43-56:
[INFO]: Proof obligation 77 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         <1>1 ,
         <1>2 ,
         <2>1 ,
         SumStakeNat 
  PROVE  ArithmeticHelp
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 125, characters 43-56:
[INFO]: Proof obligation 77 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * SlowThreshold ,
         SumStake(Q1 \cap Q2) = 0 ,
         \A S \in SUBSET Validators : SumStake(S) \in Nat 
  PROVE  \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 125, characters 43-56:
[INFO]: Proof obligation 77 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * SlowThreshold ,
         SumStake(Q1 \cap Q2) = 0 ,
         \A S \in SUBSET Validators : SumStake(S) \in Nat 
  PROVE  \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 125, characters 43-56:
[INFO]: Proof obligation 77 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * SlowThreshold ,
         SumStake(Q1 \cap Q2) = 0 ,
         \A S \in SUBSET Validators : SumStake(S) \in Nat 
  PROVE  \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 125, characters 43-56:
[INFO]: Proof obligation 77 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * SlowThreshold ,
         SumStake(Q1 \cap Q2) = 0 ,
         \A S \in SUBSET Validators : SumStake(S) \in Nat 
  PROVE  \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 125, characters 59-61:
[INFO]: Proof obligation 78 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= SlowThreshold ,
         SumStake(Q2) >= SlowThreshold ,
         <1>1 ,
         <1>2 ,
         <2>1 ,
         SumStakeNat ,
         ArithmeticHelp 
  PROVE  SMT
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 133, characters 10-25:
[INFO]: Proof obligation 80 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake
  PROVE  FastIntersection
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 133, characters 10-25:
[INFO]: Proof obligation 80 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_)
  PROVE  ASSUME NEW CONSTANT Q1 \in SUBSET Validators,
                NEW CONSTANT Q2 \in SUBSET Validators,
                SumStake(Q1) >= FastThreshold ,
                SumStake(Q2) >= FastThreshold 
         PROVE  Q1 \cap Q2 # {}
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 133, characters 10-25:
[INFO]: Proof obligation 80 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_)
  PROVE  ASSUME NEW CONSTANT Q1 \in SUBSET Validators,
                NEW CONSTANT Q2 \in SUBSET Validators,
                SumStake(Q1) >= FastThreshold ,
                SumStake(Q2) >= FastThreshold 
         PROVE  Q1 \cap Q2 # {}
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 133, characters 10-25:
[INFO]: Proof obligation 80 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_)
  PROVE  ASSUME NEW CONSTANT Q1 \in SUBSET Validators,
                NEW CONSTANT Q2 \in SUBSET Validators,
                SumStake(Q1) >= FastThreshold ,
                SumStake(Q2) >= FastThreshold 
         PROVE  Q1 \cap Q2 # {}
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 133, characters 10-25:
[INFO]: Proof obligation 80 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_)
  PROVE  ASSUME NEW CONSTANT Q1 \in SUBSET Validators,
                NEW CONSTANT Q2 \in SUBSET Validators,
                SumStake(Q1) >= FastThreshold ,
                SumStake(Q2) >= FastThreshold 
         PROVE  Q1 \cap Q2 # {}
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 139, characters 10-25:
[INFO]: Proof obligation 82 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake
  PROVE  SlowIntersection
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 139, characters 10-25:
[INFO]: Proof obligation 82 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_)
  PROVE  ASSUME NEW CONSTANT Q1 \in SUBSET Validators,
                NEW CONSTANT Q2 \in SUBSET Validators,
                SumStake(Q1) >= SlowThreshold ,
                SumStake(Q2) >= SlowThreshold 
         PROVE  Q1 \cap Q2 # {}
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 139, characters 10-25:
[INFO]: Proof obligation 82 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_)
  PROVE  ASSUME NEW CONSTANT Q1 \in SUBSET Validators,
                NEW CONSTANT Q2 \in SUBSET Validators,
                SumStake(Q1) >= SlowThreshold ,
                SumStake(Q2) >= SlowThreshold 
         PROVE  Q1 \cap Q2 # {}
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 139, characters 10-25:
[INFO]: Proof obligation 82 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_)
  PROVE  ASSUME NEW CONSTANT Q1 \in SUBSET Validators,
                NEW CONSTANT Q2 \in SUBSET Validators,
                SumStake(Q1) >= SlowThreshold ,
                SumStake(Q2) >= SlowThreshold 
         PROVE  Q1 \cap Q2 # {}
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 139, characters 10-25:
[INFO]: Proof obligation 82 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_)
  PROVE  ASSUME NEW CONSTANT Q1 \in SUBSET Validators,
                NEW CONSTANT Q2 \in SUBSET Validators,
                SumStake(Q1) >= SlowThreshold ,
                SumStake(Q2) >= SlowThreshold 
         PROVE  Q1 \cap Q2 # {}
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 155, characters 5-6:
[INFO]: Proof obligation 83 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <1>1 ,
         <1>2 ,
         <1>3 ,
         SumStakeNat ,
         ArithmeticHelp ,
         SMT 
  PROVE  SumStake(Q1 \cap Q2) >= 2 * FastThreshold - TotalStake
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 155, characters 5-6:
[INFO]: Proof obligation 83 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold ,
         2 * FastThreshold > TotalStake ,
         \A S \in SUBSET Validators : SumStake(S) \in Nat ,
         \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c ,
         TRUE 
  PROVE  SumStake(Q1 \cap Q2) >= 2 * FastThreshold - TotalStake
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 155, characters 5-6:
[INFO]: Proof obligation 83 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold ,
         2 * FastThreshold > TotalStake ,
         \A S \in SUBSET Validators : SumStake(S) \in Nat ,
         \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c ,
         TRUE 
  PROVE  SumStake(Q1 \cap Q2) >= 2 * FastThreshold - TotalStake
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 155, characters 5-6:
[INFO]: Proof obligation 83 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold ,
         2 * FastThreshold > TotalStake ,
         \A S \in SUBSET Validators : SumStake(S) \in Nat ,
         \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c ,
         TRUE 
  PROVE  SumStake(Q1 \cap Q2) >= 2 * FastThreshold - TotalStake
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 155, characters 5-6:
[INFO]: Proof obligation 83 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold ,
         2 * FastThreshold > TotalStake ,
         \A S \in SUBSET Validators : SumStake(S) \in Nat ,
         \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c ,
         TRUE 
  PROVE  SumStake(Q1 \cap Q2) >= 2 * FastThreshold - TotalStake
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 155, characters 8-11:
[INFO]: Proof obligation 84 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  <1>1
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 155, characters 8-11:
[INFO]: Proof obligation 84 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 155, characters 8-11:
[INFO]: Proof obligation 84 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 155, characters 8-11:
[INFO]: Proof obligation 84 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 155, characters 8-11:
[INFO]: Proof obligation 84 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 155, characters 14-17:
[INFO]: Proof obligation 85 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <1>1 
  PROVE  <1>2
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 155, characters 14-17:
[INFO]: Proof obligation 85 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake 
  PROVE  SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 155, characters 14-17:
[INFO]: Proof obligation 85 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake 
  PROVE  SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 155, characters 14-17:
[INFO]: Proof obligation 85 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake 
  PROVE  SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 155, characters 14-17:
[INFO]: Proof obligation 85 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake 
  PROVE  SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 155, characters 20-23:
[INFO]: Proof obligation 86 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <1>1 ,
         <1>2 
  PROVE  <1>3
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 155, characters 20-23:
[INFO]: Proof obligation 86 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold 
  PROVE  2 * FastThreshold > TotalStake
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 155, characters 20-23:
[INFO]: Proof obligation 86 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold 
  PROVE  2 * FastThreshold > TotalStake
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 155, characters 20-23:
[INFO]: Proof obligation 86 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold 
  PROVE  2 * FastThreshold > TotalStake
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 155, characters 20-23:
[INFO]: Proof obligation 86 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold 
  PROVE  2 * FastThreshold > TotalStake
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 155, characters 26-36:
[INFO]: Proof obligation 87 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <1>1 ,
         <1>2 ,
         <1>3 
  PROVE  SumStakeNat
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 155, characters 26-36:
[INFO]: Proof obligation 87 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold ,
         2 * FastThreshold > TotalStake 
  PROVE  \A S \in SUBSET Validators : SumStake(S) \in Nat
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 155, characters 26-36:
[INFO]: Proof obligation 87 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold ,
         2 * FastThreshold > TotalStake 
  PROVE  \A S \in SUBSET Validators : SumStake(S) \in Nat
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 155, characters 26-36:
[INFO]: Proof obligation 87 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold ,
         2 * FastThreshold > TotalStake 
  PROVE  \A S \in SUBSET Validators : SumStake(S) \in Nat
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 155, characters 26-36:
[INFO]: Proof obligation 87 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold ,
         2 * FastThreshold > TotalStake 
  PROVE  \A S \in SUBSET Validators : SumStake(S) \in Nat
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 155, characters 39-52:
[INFO]: Proof obligation 88 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <1>1 ,
         <1>2 ,
         <1>3 ,
         SumStakeNat 
  PROVE  ArithmeticHelp
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 155, characters 39-52:
[INFO]: Proof obligation 88 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold ,
         2 * FastThreshold > TotalStake ,
         \A S \in SUBSET Validators : SumStake(S) \in Nat 
  PROVE  \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 155, characters 39-52:
[INFO]: Proof obligation 88 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold ,
         2 * FastThreshold > TotalStake ,
         \A S \in SUBSET Validators : SumStake(S) \in Nat 
  PROVE  \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 155, characters 39-52:
[INFO]: Proof obligation 88 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold ,
         2 * FastThreshold > TotalStake ,
         \A S \in SUBSET Validators : SumStake(S) \in Nat 
  PROVE  \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 155, characters 39-52:
[INFO]: Proof obligation 88 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         SumStake(Q1 \cap Q2) >= SumStake(Q1) + SumStake(Q2) - TotalStake ,
         SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold ,
         2 * FastThreshold > TotalStake ,
         \A S \in SUBSET Validators : SumStake(S) \in Nat 
  PROVE  \A a, b, c \in Nat :
            /\ a + b >= c => a >= c - b
            /\ a >= b + c /\ c > 0 => a > b
            /\ a >= c /\ b >= c => a + b >= 2 * c
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 155, characters 55-57:
[INFO]: Proof obligation 89 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         <1>1 ,
         <1>2 ,
         <1>3 ,
         SumStakeNat ,
         ArithmeticHelp 
  PROVE  SMT
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 149, characters 8-34:
[INFO]: Proof obligation 91 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  IntersectionStakeLowerBound
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 149, characters 8-34:
[INFO]: Proof obligation 91 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  ASSUME NEW CONSTANT S1 \in SUBSET Validators,
                NEW CONSTANT S2 \in SUBSET Validators
         PROVE  SumStake(S1 \cap S2)
                >= SumStake(S1) + SumStake(S2) - TotalStake
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 149, characters 8-34:
[INFO]: Proof obligation 91 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  ASSUME NEW CONSTANT S1 \in SUBSET Validators,
                NEW CONSTANT S2 \in SUBSET Validators
         PROVE  SumStake(S1 \cap S2)
                >= SumStake(S1) + SumStake(S2) - TotalStake
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 149, characters 8-34:
[INFO]: Proof obligation 91 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  ASSUME NEW CONSTANT S1 \in SUBSET Validators,
                NEW CONSTANT S2 \in SUBSET Validators
         PROVE  SumStake(S1 \cap S2)
                >= SumStake(S1) + SumStake(S2) - TotalStake
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 149, characters 8-34:
[INFO]: Proof obligation 91 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  ASSUME NEW CONSTANT S1 \in SUBSET Validators,
                NEW CONSTANT S2 \in SUBSET Validators
         PROVE  SumStake(S1 \cap S2)
                >= SumStake(S1) + SumStake(S2) - TotalStake
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 151, characters 8-23:
[INFO]: Proof obligation 93 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  DoubleLowerBound
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 151, characters 8-23:
[INFO]: Proof obligation 93 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  ASSUME NEW CONSTANT a \in Nat,
                NEW CONSTANT b \in Nat,
                NEW CONSTANT c \in Nat,
                a >= c ,
                b >= c 
         PROVE  a + b >= 2 * c
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 151, characters 8-23:
[INFO]: Proof obligation 93 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  ASSUME NEW CONSTANT a \in Nat,
                NEW CONSTANT b \in Nat,
                NEW CONSTANT c \in Nat,
                a >= c ,
                b >= c 
         PROVE  a + b >= 2 * c
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 151, characters 8-23:
[INFO]: Proof obligation 93 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  ASSUME NEW CONSTANT a \in Nat,
                NEW CONSTANT b \in Nat,
                NEW CONSTANT c \in Nat,
                a >= c ,
                b >= c 
         PROVE  a + b >= 2 * c
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 151, characters 8-23:
[INFO]: Proof obligation 93 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  ASSUME NEW CONSTANT a \in Nat,
                NEW CONSTANT b \in Nat,
                NEW CONSTANT c \in Nat,
                a >= c ,
                b >= c 
         PROVE  a + b >= 2 * c
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 151, characters 26-40:
[INFO]: Proof obligation 94 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         DoubleLowerBound 
  PROVE  ThresholdBounds
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 151, characters 26-40:
[INFO]: Proof obligation 94 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         ASSUME NEW CONSTANT a \in Nat,
                NEW CONSTANT b \in Nat,
                NEW CONSTANT c \in Nat,
                a >= c ,
                b >= c 
         PROVE  a + b >= 2 * c 
  PROVE  /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 151, characters 26-40:
[INFO]: Proof obligation 94 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         ASSUME NEW CONSTANT a \in Nat,
                NEW CONSTANT b \in Nat,
                NEW CONSTANT c \in Nat,
                a >= c ,
                b >= c 
         PROVE  a + b >= 2 * c 
  PROVE  /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 151, characters 26-40:
[INFO]: Proof obligation 94 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         ASSUME NEW CONSTANT a \in Nat,
                NEW CONSTANT b \in Nat,
                NEW CONSTANT c \in Nat,
                a >= c ,
                b >= c 
         PROVE  a + b >= 2 * c 
  PROVE  /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 151, characters 26-40:
[INFO]: Proof obligation 94 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         ASSUME NEW CONSTANT a \in Nat,
                NEW CONSTANT b \in Nat,
                NEW CONSTANT c \in Nat,
                a >= c ,
                b >= c 
         PROVE  a + b >= 2 * c 
  PROVE  /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 151, characters 43-53:
[INFO]: Proof obligation 95 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         DoubleLowerBound ,
         ThresholdBounds 
  PROVE  SumStakeNat
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 151, characters 43-53:
[INFO]: Proof obligation 95 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         ASSUME NEW CONSTANT a \in Nat,
                NEW CONSTANT b \in Nat,
                NEW CONSTANT c \in Nat,
                a >= c ,
                b >= c 
         PROVE  a + b >= 2 * c ,
         /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake 
  PROVE  \A S \in SUBSET Validators : SumStake(S) \in Nat
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 151, characters 43-53:
[INFO]: Proof obligation 95 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         ASSUME NEW CONSTANT a \in Nat,
                NEW CONSTANT b \in Nat,
                NEW CONSTANT c \in Nat,
                a >= c ,
                b >= c 
         PROVE  a + b >= 2 * c ,
         /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake 
  PROVE  \A S \in SUBSET Validators : SumStake(S) \in Nat
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 151, characters 43-53:
[INFO]: Proof obligation 95 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         ASSUME NEW CONSTANT a \in Nat,
                NEW CONSTANT b \in Nat,
                NEW CONSTANT c \in Nat,
                a >= c ,
                b >= c 
         PROVE  a + b >= 2 * c ,
         /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake 
  PROVE  \A S \in SUBSET Validators : SumStake(S) \in Nat
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 151, characters 43-53:
[INFO]: Proof obligation 95 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold ,
         ASSUME NEW CONSTANT a \in Nat,
                NEW CONSTANT b \in Nat,
                NEW CONSTANT c \in Nat,
                a >= c ,
                b >= c 
         PROVE  a + b >= 2 * c ,
         /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake 
  PROVE  \A S \in SUBSET Validators : SumStake(S) \in Nat
(* ... trivial *)
<unknown location>:
[INFO]: Proof obligation before `Backend.Prep.expand_defs`:

File "./proofs/QuorumIntersection.tla", line 153, characters 8-22:
[INFO]: Proof obligation 97 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         StakeFunction == Stake \in [Validators -> Nat],
         NEW CONSTANT SumStake(_),
         SumStakeEmpty == SumStake({}) = 0,
         SumStakeDisjoint ==
           \A S1, S2 \in SUBSET Validators :
              S1 \cap S2 = {}
              => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
         SumStakeMonotone ==
           \A S1, S2 \in SUBSET Validators :
              S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
         SumStakeTotal == SumStake(Validators) = TotalStake,
         SumStakeBound ==
           \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
         SumStakeUnion ==
           \A S1, S2 \in SUBSET Validators :
              SumStake(S1) + SumStake(S2)
              = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
         SumStakeNat == \A S \in SUBSET Validators : SumStake(S) \in Nat,
         ThresholdBounds ==
           /\ FastThreshold \in Nat
           /\ SlowThreshold \in Nat
           /\ FastThreshold = (TotalStake * 8) \div 10
           /\ SlowThreshold = (TotalStake * 6) \div 10
           /\ 2 * FastThreshold > TotalStake
           /\ 2 * SlowThreshold > TotalStake,
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  ThresholdBounds
<unknown location>:
[INFO]: Proof obligation after `Backend.Prep.expand_defs` and before `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 153, characters 8-22:
[INFO]: Proof obligation 97 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake
<unknown location>:
[INFO]: Proof obligation after `Expr.Elab.normalize`:

File "./proofs/QuorumIntersection.tla", line 153, characters 8-22:
[INFO]: Proof obligation 97 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake
<unknown location>:
[INFO]: Proof obligation before `Expr.Action.expand_action_operators`:

File "./proofs/QuorumIntersection.tla", line 153, characters 8-22:
[INFO]: Proof obligation 97 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake
<unknown location>:
[INFO]: Proof obligation after `Expr.Action.expand_action_operators` (expansion of `ENABLED`, `\cdot`, and definitions for soundness):

File "./proofs/QuorumIntersection.tla", line 153, characters 8-22:
[INFO]: Proof obligation 97 :

  ASSUME NEW CONSTANT Validators,
         NEW CONSTANT Stake,
         NEW CONSTANT TotalStake,
         NEW CONSTANT FastThreshold,
         NEW CONSTANT SlowThreshold,
         NEW CONSTANT SumStake(_),
         NEW CONSTANT Q1 \in SUBSET Validators,
         NEW CONSTANT Q2 \in SUBSET Validators,
         SumStake(Q1) >= FastThreshold ,
         SumStake(Q2) >= FastThreshold 
  PROVE  /\ FastThreshold \in Nat
         /\ SlowThreshold \in Nat
         /\ FastThreshold = (TotalStake * 8) \div 10
         /\ SlowThreshold = (TotalStake * 6) \div 10
         /\ 2 * FastThreshold > TotalStake
         /\ 2 * SlowThreshold > TotalStake
(* ... trivial *)
(* created new ".tlacache/QuorumIntersection.tlaps/QuorumIntersection.thy" *)
(* fingerprints written in ".tlacache/QuorumIntersection.tlaps/fingerprints" *)
File "./proofs/QuorumIntersection.tla", line 153, characters 8-22:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= FastThreshold ,
                 SumStake(Q2) >= FastThreshold 
          PROVE  ThresholdBounds
File "./proofs/QuorumIntersection.tla", line 153, characters 5-6:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= FastThreshold ,
                 SumStake(Q2) >= FastThreshold ,
                 ThresholdBounds 
          PROVE  2 * FastThreshold > TotalStake
File "./proofs/QuorumIntersection.tla", line 151, characters 43-53:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= FastThreshold ,
                 SumStake(Q2) >= FastThreshold ,
                 DoubleLowerBound ,
                 ThresholdBounds 
          PROVE  SumStakeNat
File "./proofs/QuorumIntersection.tla", line 151, characters 26-40:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= FastThreshold ,
                 SumStake(Q2) >= FastThreshold ,
                 DoubleLowerBound 
          PROVE  ThresholdBounds
File "./proofs/QuorumIntersection.tla", line 151, characters 8-23:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= FastThreshold ,
                 SumStake(Q2) >= FastThreshold 
          PROVE  DoubleLowerBound
File "./proofs/QuorumIntersection.tla", line 151, characters 5-6:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= FastThreshold ,
                 SumStake(Q2) >= FastThreshold ,
                 DoubleLowerBound ,
                 ThresholdBounds ,
                 SumStakeNat 
          PROVE  SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold
File "./proofs/QuorumIntersection.tla", line 149, characters 8-34:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= FastThreshold ,
                 SumStake(Q2) >= FastThreshold 
          PROVE  IntersectionStakeLowerBound
File "./proofs/QuorumIntersection.tla", line 149, characters 5-6:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= FastThreshold ,
                 SumStake(Q2) >= FastThreshold ,
                 IntersectionStakeLowerBound 
          PROVE  SumStake(Q1 \cap Q2)
                 >= SumStake(Q1) + SumStake(Q2) - TotalStake
File "./proofs/QuorumIntersection.tla", line 155, characters 55-57:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= FastThreshold ,
                 SumStake(Q2) >= FastThreshold ,
                 <1>1 ,
                 <1>2 ,
                 <1>3 ,
                 SumStakeNat ,
                 ArithmeticHelp 
          PROVE  SMT
File "./proofs/QuorumIntersection.tla", line 155, characters 39-52:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= FastThreshold ,
                 SumStake(Q2) >= FastThreshold ,
                 <1>1 ,
                 <1>2 ,
                 <1>3 ,
                 SumStakeNat 
          PROVE  ArithmeticHelp
File "./proofs/QuorumIntersection.tla", line 155, characters 26-36:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= FastThreshold ,
                 SumStake(Q2) >= FastThreshold ,
                 <1>1 ,
                 <1>2 ,
                 <1>3 
          PROVE  SumStakeNat
File "./proofs/QuorumIntersection.tla", line 155, characters 20-23:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= FastThreshold ,
                 SumStake(Q2) >= FastThreshold ,
                 <1>1 ,
                 <1>2 
          PROVE  <1>3
File "./proofs/QuorumIntersection.tla", line 155, characters 14-17:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= FastThreshold ,
                 SumStake(Q2) >= FastThreshold ,
                 <1>1 
          PROVE  <1>2
File "./proofs/QuorumIntersection.tla", line 155, characters 8-11:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= FastThreshold ,
                 SumStake(Q2) >= FastThreshold 
          PROVE  <1>1
File "./proofs/QuorumIntersection.tla", line 139, characters 10-25:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake
          PROVE  SlowIntersection
File "./proofs/QuorumIntersection.tla", line 139, characters 7-8:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 SlowIntersection 
          PROVE  \A Q1, Q2 \in SUBSET Validators :
                    SumStake(Q1) >= SlowThreshold
                    /\ SumStake(Q2) >= SlowThreshold => Q1 \cap Q2 # {}
File "./proofs/QuorumIntersection.tla", line 133, characters 10-25:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake
          PROVE  FastIntersection
File "./proofs/QuorumIntersection.tla", line 133, characters 7-8:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 FastIntersection 
          PROVE  \A Q1, Q2 \in SUBSET Validators :
                    SumStake(Q1) >= FastThreshold
                    /\ SumStake(Q2) >= FastThreshold => Q1 \cap Q2 # {}
File "./proofs/QuorumIntersection.tla", line 125, characters 59-61:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= SlowThreshold ,
                 SumStake(Q2) >= SlowThreshold ,
                 <1>1 ,
                 <1>2 ,
                 <2>1 ,
                 SumStakeNat ,
                 ArithmeticHelp 
          PROVE  SMT
File "./proofs/QuorumIntersection.tla", line 125, characters 43-56:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= SlowThreshold ,
                 SumStake(Q2) >= SlowThreshold ,
                 <1>1 ,
                 <1>2 ,
                 <2>1 ,
                 SumStakeNat 
          PROVE  ArithmeticHelp
File "./proofs/QuorumIntersection.tla", line 125, characters 30-40:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= SlowThreshold ,
                 SumStake(Q2) >= SlowThreshold ,
                 <1>1 ,
                 <1>2 ,
                 <2>1 
          PROVE  SumStakeNat
File "./proofs/QuorumIntersection.tla", line 125, characters 24-27:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= SlowThreshold ,
                 SumStake(Q2) >= SlowThreshold ,
                 <1>1 ,
                 <1>2 
          PROVE  <2>1
File "./proofs/QuorumIntersection.tla", line 125, characters 18-21:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= SlowThreshold ,
                 SumStake(Q2) >= SlowThreshold ,
                 <1>1 
          PROVE  <1>2
File "./proofs/QuorumIntersection.tla", line 125, characters 12-15:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= SlowThreshold ,
                 SumStake(Q2) >= SlowThreshold 
          PROVE  <1>1
File "./proofs/QuorumIntersection.tla", line 123, characters 45-57:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= SlowThreshold ,
                 SumStake(Q2) >= SlowThreshold ,
                 <1>4 
          PROVE  SumStakeEmpty
File "./proofs/QuorumIntersection.tla", line 123, characters 39-42:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= SlowThreshold ,
                 SumStake(Q2) >= SlowThreshold 
          PROVE  <1>4
File "./proofs/QuorumIntersection.tla", line 123, characters 36-37:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= SlowThreshold ,
                 SumStake(Q2) >= SlowThreshold ,
                 <1>4 ,
                 SumStakeEmpty 
          PROVE  SumStake(Q1 \cap Q2) = 0
File "./proofs/QuorumIntersection.tla", line 126, characters 46-48:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= SlowThreshold ,
                 SumStake(Q2) >= SlowThreshold ,
                 <2>2 ,
                 <1>3 ,
                 ArithmeticHelp 
          PROVE  SMT
File "./proofs/QuorumIntersection.tla", line 126, characters 30-43:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= SlowThreshold ,
                 SumStake(Q2) >= SlowThreshold ,
                 <2>2 ,
                 <1>3 
          PROVE  ArithmeticHelp
File "./proofs/QuorumIntersection.tla", line 126, characters 24-27:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= SlowThreshold ,
                 SumStake(Q2) >= SlowThreshold ,
                 <2>2 
          PROVE  <1>3
File "./proofs/QuorumIntersection.tla", line 126, characters 18-21:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= SlowThreshold ,
                 SumStake(Q2) >= SlowThreshold 
          PROVE  <2>2
File "./proofs/QuorumIntersection.tla", line 120, characters 41-43:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= SlowThreshold ,
                 SumStake(Q2) >= SlowThreshold ,
                 ThresholdBounds ,
                 ArithmeticHelp 
          PROVE  SMT
File "./proofs/QuorumIntersection.tla", line 120, characters 25-38:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= SlowThreshold ,
                 SumStake(Q2) >= SlowThreshold ,
                 ThresholdBounds 
          PROVE  ArithmeticHelp
File "./proofs/QuorumIntersection.tla", line 120, characters 8-22:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= SlowThreshold ,
                 SumStake(Q2) >= SlowThreshold 
          PROVE  ThresholdBounds
File "./proofs/QuorumIntersection.tla", line 118, characters 43-53:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= SlowThreshold ,
                 SumStake(Q2) >= SlowThreshold ,
                 DoubleLowerBound ,
                 ThresholdBounds 
          PROVE  SumStakeNat
File "./proofs/QuorumIntersection.tla", line 118, characters 26-40:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= SlowThreshold ,
                 SumStake(Q2) >= SlowThreshold ,
                 DoubleLowerBound 
          PROVE  ThresholdBounds
File "./proofs/QuorumIntersection.tla", line 118, characters 8-23:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= SlowThreshold ,
                 SumStake(Q2) >= SlowThreshold 
          PROVE  DoubleLowerBound
File "./proofs/QuorumIntersection.tla", line 118, characters 5-6:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= SlowThreshold ,
                 SumStake(Q2) >= SlowThreshold ,
                 DoubleLowerBound ,
                 ThresholdBounds ,
                 SumStakeNat 
          PROVE  SumStake(Q1) + SumStake(Q2) >= 2 * SlowThreshold
File "./proofs/QuorumIntersection.tla", line 116, characters 8-34:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= SlowThreshold ,
                 SumStake(Q2) >= SlowThreshold 
          PROVE  IntersectionStakeLowerBound
File "./proofs/QuorumIntersection.tla", line 116, characters 5-6:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= SlowThreshold ,
                 SumStake(Q2) >= SlowThreshold ,
                 IntersectionStakeLowerBound 
          PROVE  SumStake(Q1 \cap Q2)
                 >= SumStake(Q1) + SumStake(Q2) - TotalStake
File "./proofs/QuorumIntersection.tla", line 127, characters 16-19:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= SlowThreshold ,
                 SumStake(Q2) >= SlowThreshold 
          PROVE  <1>4
File "./proofs/QuorumIntersection.tla", line 127, characters 13-14:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= SlowThreshold ,
                 SumStake(Q2) >= SlowThreshold ,
                 <1>4 
          PROVE  Q1 \cap Q2 # {}
File "./proofs/QuorumIntersection.tla", line 104, characters 59-61:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= FastThreshold ,
                 SumStake(Q2) >= FastThreshold ,
                 <1>1 ,
                 <1>2 ,
                 <2>1 ,
                 SumStakeNat ,
                 ArithmeticHelp 
          PROVE  SMT
File "./proofs/QuorumIntersection.tla", line 104, characters 43-56:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= FastThreshold ,
                 SumStake(Q2) >= FastThreshold ,
                 <1>1 ,
                 <1>2 ,
                 <2>1 ,
                 SumStakeNat 
          PROVE  ArithmeticHelp
File "./proofs/QuorumIntersection.tla", line 104, characters 30-40:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= FastThreshold ,
                 SumStake(Q2) >= FastThreshold ,
                 <1>1 ,
                 <1>2 ,
                 <2>1 
          PROVE  SumStakeNat
File "./proofs/QuorumIntersection.tla", line 104, characters 24-27:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= FastThreshold ,
                 SumStake(Q2) >= FastThreshold ,
                 <1>1 ,
                 <1>2 
          PROVE  <2>1
File "./proofs/QuorumIntersection.tla", line 104, characters 18-21:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= FastThreshold ,
                 SumStake(Q2) >= FastThreshold ,
                 <1>1 
          PROVE  <1>2
File "./proofs/QuorumIntersection.tla", line 104, characters 12-15:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= FastThreshold ,
                 SumStake(Q2) >= FastThreshold 
          PROVE  <1>1
File "./proofs/QuorumIntersection.tla", line 102, characters 45-57:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= FastThreshold ,
                 SumStake(Q2) >= FastThreshold ,
                 <1>4 
          PROVE  SumStakeEmpty
File "./proofs/QuorumIntersection.tla", line 102, characters 39-42:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= FastThreshold ,
                 SumStake(Q2) >= FastThreshold 
          PROVE  <1>4
File "./proofs/QuorumIntersection.tla", line 102, characters 36-37:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= FastThreshold ,
                 SumStake(Q2) >= FastThreshold ,
                 <1>4 ,
                 SumStakeEmpty 
          PROVE  SumStake(Q1 \cap Q2) = 0
File "./proofs/QuorumIntersection.tla", line 105, characters 46-48:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= FastThreshold ,
                 SumStake(Q2) >= FastThreshold ,
                 <2>2 ,
                 <1>3 ,
                 ArithmeticHelp 
          PROVE  SMT
File "./proofs/QuorumIntersection.tla", line 105, characters 30-43:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= FastThreshold ,
                 SumStake(Q2) >= FastThreshold ,
                 <2>2 ,
                 <1>3 
          PROVE  ArithmeticHelp
File "./proofs/QuorumIntersection.tla", line 105, characters 24-27:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= FastThreshold ,
                 SumStake(Q2) >= FastThreshold ,
                 <2>2 
          PROVE  <1>3
File "./proofs/QuorumIntersection.tla", line 105, characters 18-21:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= FastThreshold ,
                 SumStake(Q2) >= FastThreshold 
          PROVE  <2>2
File "./proofs/QuorumIntersection.tla", line 99, characters 41-43:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= FastThreshold ,
                 SumStake(Q2) >= FastThreshold ,
                 ThresholdBounds ,
                 ArithmeticHelp 
          PROVE  SMT
File "./proofs/QuorumIntersection.tla", line 99, characters 25-38:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= FastThreshold ,
                 SumStake(Q2) >= FastThreshold ,
                 ThresholdBounds 
          PROVE  ArithmeticHelp
File "./proofs/QuorumIntersection.tla", line 99, characters 8-22:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= FastThreshold ,
                 SumStake(Q2) >= FastThreshold 
          PROVE  ThresholdBounds
File "./proofs/QuorumIntersection.tla", line 97, characters 43-53:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= FastThreshold ,
                 SumStake(Q2) >= FastThreshold ,
                 DoubleLowerBound ,
                 ThresholdBounds 
          PROVE  SumStakeNat
File "./proofs/QuorumIntersection.tla", line 97, characters 26-40:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= FastThreshold ,
                 SumStake(Q2) >= FastThreshold ,
                 DoubleLowerBound 
          PROVE  ThresholdBounds
File "./proofs/QuorumIntersection.tla", line 97, characters 8-23:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= FastThreshold ,
                 SumStake(Q2) >= FastThreshold 
          PROVE  DoubleLowerBound
File "./proofs/QuorumIntersection.tla", line 97, characters 5-6:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= FastThreshold ,
                 SumStake(Q2) >= FastThreshold ,
                 DoubleLowerBound ,
                 ThresholdBounds ,
                 SumStakeNat 
          PROVE  SumStake(Q1) + SumStake(Q2) >= 2 * FastThreshold
File "./proofs/QuorumIntersection.tla", line 95, characters 8-34:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= FastThreshold ,
                 SumStake(Q2) >= FastThreshold 
          PROVE  IntersectionStakeLowerBound
File "./proofs/QuorumIntersection.tla", line 95, characters 5-6:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= FastThreshold ,
                 SumStake(Q2) >= FastThreshold ,
                 IntersectionStakeLowerBound 
          PROVE  SumStake(Q1 \cap Q2)
                 >= SumStake(Q1) + SumStake(Q2) - TotalStake
File "./proofs/QuorumIntersection.tla", line 106, characters 16-19:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= FastThreshold ,
                 SumStake(Q2) >= FastThreshold 
          PROVE  <1>4
File "./proofs/QuorumIntersection.tla", line 106, characters 13-14:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT Q1 \in SUBSET Validators,
                 NEW CONSTANT Q2 \in SUBSET Validators,
                 SumStake(Q1) >= FastThreshold ,
                 SumStake(Q2) >= FastThreshold ,
                 <1>4 
          PROVE  Q1 \cap Q2 # {}
File "./proofs/QuorumIntersection.tla", line 85, characters 26-28:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT a \in Nat,
                 NEW CONSTANT b \in Nat,
                 NEW CONSTANT c \in Nat,
                 a >= c ,
                 b >= c ,
                 ArithmeticHelp 
          PROVE  SMT
File "./proofs/QuorumIntersection.tla", line 85, characters 10-23:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT a \in Nat,
                 NEW CONSTANT b \in Nat,
                 NEW CONSTANT c \in Nat,
                 a >= c ,
                 b >= c 
          PROVE  ArithmeticHelp
File "./proofs/QuorumIntersection.tla", line 85, characters 7-8:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT a \in Nat,
                 NEW CONSTANT b \in Nat,
                 NEW CONSTANT c \in Nat,
                 a >= c ,
                 b >= c ,
                 ArithmeticHelp ,
                 SMT 
          PROVE  a + b >= 2 * c
File "./proofs/QuorumIntersection.tla", line 74, characters 8-18:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT S1 \in SUBSET Validators,
                 NEW CONSTANT S2 \in SUBSET Validators
          PROVE  SumStakeNat
File "./proofs/QuorumIntersection.tla", line 72, characters 42-44:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT S1 \in SUBSET Validators,
                 NEW CONSTANT S2 \in SUBSET Validators,
                 <1>1 ,
                 <1>2 ,
                 <1>3 ,
                 ArithmeticHelp 
          PROVE  SMT
File "./proofs/QuorumIntersection.tla", line 72, characters 26-39:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT S1 \in SUBSET Validators,
                 NEW CONSTANT S2 \in SUBSET Validators,
                 <1>1 ,
                 <1>2 ,
                 <1>3 
          PROVE  ArithmeticHelp
File "./proofs/QuorumIntersection.tla", line 72, characters 20-23:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT S1 \in SUBSET Validators,
                 NEW CONSTANT S2 \in SUBSET Validators,
                 <1>1 ,
                 <1>2 
          PROVE  <1>3
File "./proofs/QuorumIntersection.tla", line 72, characters 14-17:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT S1 \in SUBSET Validators,
                 NEW CONSTANT S2 \in SUBSET Validators,
                 <1>1 
          PROVE  <1>2
File "./proofs/QuorumIntersection.tla", line 72, characters 8-11:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT S1 \in SUBSET Validators,
                 NEW CONSTANT S2 \in SUBSET Validators
          PROVE  <1>1
File "./proofs/QuorumIntersection.tla", line 70, characters 8-18:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT S1 \in SUBSET Validators,
                 NEW CONSTANT S2 \in SUBSET Validators
          PROVE  SumStakeNat
File "./proofs/QuorumIntersection.tla", line 70, characters 5-6:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT S1 \in SUBSET Validators,
                 NEW CONSTANT S2 \in SUBSET Validators,
                 SumStakeNat 
          PROVE  SumStake(S1 \cup S2) \in Nat /\ SumStake(S1 \cap S2) \in Nat
File "./proofs/QuorumIntersection.tla", line 68, characters 8-20:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT S1 \in SUBSET Validators,
                 NEW CONSTANT S2 \in SUBSET Validators
          PROVE  SumStakeBound
File "./proofs/QuorumIntersection.tla", line 68, characters 5-6:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT S1 \in SUBSET Validators,
                 NEW CONSTANT S2 \in SUBSET Validators,
                 SumStakeBound 
          PROVE  SumStake(S1 \cup S2) =< TotalStake
File "./proofs/QuorumIntersection.tla", line 66, characters 8-20:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT S1 \in SUBSET Validators,
                 NEW CONSTANT S2 \in SUBSET Validators
          PROVE  SumStakeUnion
File "./proofs/QuorumIntersection.tla", line 66, characters 5-6:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT S1 \in SUBSET Validators,
                 NEW CONSTANT S2 \in SUBSET Validators,
                 SumStakeUnion 
          PROVE  SumStake(S1) + SumStake(S2)
                 = SumStake(S1 \cup S2) + SumStake(S1 \cap S2)
File "./proofs/QuorumIntersection.tla", line 76, characters 36-38:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT S1 \in SUBSET Validators,
                 NEW CONSTANT S2 \in SUBSET Validators,
                 <1>4 ,
                 <1>5 ,
                 ArithmeticHelp 
          PROVE  SMT
File "./proofs/QuorumIntersection.tla", line 76, characters 20-33:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT S1 \in SUBSET Validators,
                 NEW CONSTANT S2 \in SUBSET Validators,
                 <1>4 ,
                 <1>5 
          PROVE  ArithmeticHelp
File "./proofs/QuorumIntersection.tla", line 76, characters 14-17:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT S1 \in SUBSET Validators,
                 NEW CONSTANT S2 \in SUBSET Validators,
                 <1>4 
          PROVE  <1>5
File "./proofs/QuorumIntersection.tla", line 76, characters 8-11:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 NEW CONSTANT S1 \in SUBSET Validators,
                 NEW CONSTANT S2 \in SUBSET Validators
          PROVE  <1>4
File "./proofs/QuorumIntersection.tla", line 58, characters 10-12:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake
          PROVE  SMT
File "./proofs/QuorumIntersection.tla", line 58, characters 7-8:
[INFO]: Attempted to prove or check:
          ASSUME NEW CONSTANT Validators,
                 NEW CONSTANT Stake,
                 NEW CONSTANT TotalStake,
                 NEW CONSTANT FastThreshold,
                 NEW CONSTANT SlowThreshold,
                 StakeFunction == Stake \in [Validators -> Nat],
                 NEW CONSTANT SumStake(_),
                 SumStakeEmpty == SumStake({}) = 0,
                 SumStakeDisjoint ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \cap S2 = {}
                      => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                 SumStakeMonotone ==
                   \A S1, S2 \in SUBSET Validators :
                      S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                 SumStakeTotal == SumStake(Validators) = TotalStake,
                 SumStakeBound ==
                   \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                 SumStakeUnion ==
                   \A S1, S2 \in SUBSET Validators :
                      SumStake(S1) + SumStake(S2)
                      = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                 SumStakeNat ==
                   \A S \in SUBSET Validators : SumStake(S) \in Nat,
                 ThresholdBounds ==
                   /\ FastThreshold \in Nat
                   /\ SlowThreshold \in Nat
                   /\ FastThreshold = (TotalStake * 8) \div 10
                   /\ SlowThreshold = (TotalStake * 6) \div 10
                   /\ 2 * FastThreshold > TotalStake
                   /\ 2 * SlowThreshold > TotalStake,
                 SMT 
          PROVE  \A a, b, c \in Nat :
                    /\ a + b >= c => a >= c - b
                    /\ a >= b + c /\ c > 0 => a > b
                    /\ a >= c /\ b >= c => a + b >= 2 * c
File "./proofs/QuorumIntersection.tla", line 155, characters 5-6:
[ERROR]: Could not prove or check:
           ASSUME NEW CONSTANT Validators,
                  NEW CONSTANT Stake,
                  NEW CONSTANT TotalStake,
                  NEW CONSTANT FastThreshold,
                  NEW CONSTANT SlowThreshold,
                  StakeFunction == Stake \in [Validators -> Nat],
                  NEW CONSTANT SumStake
                  (_),
                  SumStakeEmpty == SumStake({}) = 0,
                  SumStakeDisjoint ==
                    \A S1, S2 \in SUBSET Validators :
                       S1 \cap S2 = {}
                       => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                  SumStakeMonotone ==
                    \A S1, S2 \in SUBSET Validators :
                       S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                  SumStakeTotal == SumStake(Validators) = TotalStake,
                  SumStakeBound ==
                    \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                  SumStakeUnion ==
                    \A S1, S2 \in SUBSET Validators :
                       SumStake(S1) + SumStake(S2)
                       = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                  SumStakeNat ==
                    \A S \in SUBSET Validators : SumStake(S) \in Nat,
                  ThresholdBounds ==
                    /\ FastThreshold \in Nat
                    /\ SlowThreshold \in Nat
                    /\ FastThreshold = (TotalStake * 8) \div 10
                    /\ SlowThreshold = (TotalStake * 6) \div 10
                    /\ 2 * FastThreshold > TotalStake
                    /\ 2 * SlowThreshold > TotalStake,
                  NEW CONSTANT Q1 \in 
                  SUBSET Validators,
                  NEW CONSTANT Q2 \in 
                  SUBSET Validators,
                  SumStake(Q1) >= FastThreshold ,
                  SumStake(Q2) >= FastThreshold ,
                  <1>1 ,
                  <1>2 ,
                  <1>3 ,
                  SumStakeNat ,
                  ArithmeticHelp ,
                  SMT 
           PROVE  SumStake(Q1 \cap Q2) >= 2 * FastThreshold - TotalStake
File "./proofs/QuorumIntersection.tla", line 125, characters 9-10:
[ERROR]: Could not prove or check:
           ASSUME NEW CONSTANT Validators,
                  NEW CONSTANT Stake,
                  NEW CONSTANT TotalStake,
                  NEW CONSTANT FastThreshold,
                  NEW CONSTANT SlowThreshold,
                  StakeFunction == Stake \in [Validators -> Nat],
                  NEW CONSTANT SumStake
                  (_),
                  SumStakeEmpty == SumStake({}) = 0,
                  SumStakeDisjoint ==
                    \A S1, S2 \in SUBSET Validators :
                       S1 \cap S2 = {}
                       => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                  SumStakeMonotone ==
                    \A S1, S2 \in SUBSET Validators :
                       S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                  SumStakeTotal == SumStake(Validators) = TotalStake,
                  SumStakeBound ==
                    \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                  SumStakeUnion ==
                    \A S1, S2 \in SUBSET Validators :
                       SumStake(S1) + SumStake(S2)
                       = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                  SumStakeNat ==
                    \A S \in SUBSET Validators : SumStake(S) \in Nat,
                  ThresholdBounds ==
                    /\ FastThreshold \in Nat
                    /\ SlowThreshold \in Nat
                    /\ FastThreshold = (TotalStake * 8) \div 10
                    /\ SlowThreshold = (TotalStake * 6) \div 10
                    /\ 2 * FastThreshold > TotalStake
                    /\ 2 * SlowThreshold > TotalStake,
                  NEW CONSTANT Q1 \in 
                  SUBSET Validators,
                  NEW CONSTANT Q2 \in 
                  SUBSET Validators,
                  SumStake(Q1) >= SlowThreshold ,
                  SumStake(Q2) >= SlowThreshold ,
                  <1>1 ,
                  <1>2 ,
                  <2>1 ,
                  SumStakeNat ,
                  ArithmeticHelp ,
                  SMT 
           PROVE  0 >= 2 * SlowThreshold - TotalStake
File "./proofs/QuorumIntersection.tla", line 126, characters 15-16:
[ERROR]: Could not prove or check:
           ASSUME NEW CONSTANT Validators,
                  NEW CONSTANT Stake,
                  NEW CONSTANT TotalStake,
                  NEW CONSTANT FastThreshold,
                  NEW CONSTANT SlowThreshold,
                  StakeFunction == Stake \in [Validators -> Nat],
                  NEW CONSTANT SumStake
                  (_),
                  SumStakeEmpty == SumStake({}) = 0,
                  SumStakeDisjoint ==
                    \A S1, S2 \in SUBSET Validators :
                       S1 \cap S2 = {}
                       => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                  SumStakeMonotone ==
                    \A S1, S2 \in SUBSET Validators :
                       S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                  SumStakeTotal == SumStake(Validators) = TotalStake,
                  SumStakeBound ==
                    \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                  SumStakeUnion ==
                    \A S1, S2 \in SUBSET Validators :
                       SumStake(S1) + SumStake(S2)
                       = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                  SumStakeNat ==
                    \A S \in SUBSET Validators : SumStake(S) \in Nat,
                  ThresholdBounds ==
                    /\ FastThreshold \in Nat
                    /\ SlowThreshold \in Nat
                    /\ FastThreshold = (TotalStake * 8) \div 10
                    /\ SlowThreshold = (TotalStake * 6) \div 10
                    /\ 2 * FastThreshold > TotalStake
                    /\ 2 * SlowThreshold > TotalStake,
                  NEW CONSTANT Q1 \in 
                  SUBSET Validators,
                  NEW CONSTANT Q2 \in 
                  SUBSET Validators,
                  SumStake(Q1) >= SlowThreshold ,
                  SumStake(Q2) >= SlowThreshold ,
                  <2>2 ,
                  <1>3 ,
                  ArithmeticHelp ,
                  SMT 
           PROVE  FALSE
File "./proofs/QuorumIntersection.tla", line 120, characters 5-6:
[ERROR]: Could not prove or check:
           ASSUME NEW CONSTANT Validators,
                  NEW CONSTANT Stake,
                  NEW CONSTANT TotalStake,
                  NEW CONSTANT FastThreshold,
                  NEW CONSTANT SlowThreshold,
                  StakeFunction == Stake \in [Validators -> Nat],
                  NEW CONSTANT SumStake
                  (_),
                  SumStakeEmpty == SumStake({}) = 0,
                  SumStakeDisjoint ==
                    \A S1, S2 \in SUBSET Validators :
                       S1 \cap S2 = {}
                       => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                  SumStakeMonotone ==
                    \A S1, S2 \in SUBSET Validators :
                       S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                  SumStakeTotal == SumStake(Validators) = TotalStake,
                  SumStakeBound ==
                    \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                  SumStakeUnion ==
                    \A S1, S2 \in SUBSET Validators :
                       SumStake(S1) + SumStake(S2)
                       = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                  SumStakeNat ==
                    \A S \in SUBSET Validators : SumStake(S) \in Nat,
                  ThresholdBounds ==
                    /\ FastThreshold \in Nat
                    /\ SlowThreshold \in Nat
                    /\ FastThreshold = (TotalStake * 8) \div 10
                    /\ SlowThreshold = (TotalStake * 6) \div 10
                    /\ 2 * FastThreshold > TotalStake
                    /\ 2 * SlowThreshold > TotalStake,
                  NEW CONSTANT Q1 \in 
                  SUBSET Validators,
                  NEW CONSTANT Q2 \in 
                  SUBSET Validators,
                  SumStake(Q1) >= SlowThreshold ,
                  SumStake(Q2) >= SlowThreshold ,
                  ThresholdBounds ,
                  ArithmeticHelp ,
                  SMT 
           PROVE  2 * SlowThreshold - TotalStake > 0
File "./proofs/QuorumIntersection.tla", line 104, characters 9-10:
[ERROR]: Could not prove or check:
           ASSUME NEW CONSTANT Validators,
                  NEW CONSTANT Stake,
                  NEW CONSTANT TotalStake,
                  NEW CONSTANT FastThreshold,
                  NEW CONSTANT SlowThreshold,
                  StakeFunction == Stake \in [Validators -> Nat],
                  NEW CONSTANT SumStake
                  (_),
                  SumStakeEmpty == SumStake({}) = 0,
                  SumStakeDisjoint ==
                    \A S1, S2 \in SUBSET Validators :
                       S1 \cap S2 = {}
                       => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                  SumStakeMonotone ==
                    \A S1, S2 \in SUBSET Validators :
                       S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                  SumStakeTotal == SumStake(Validators) = TotalStake,
                  SumStakeBound ==
                    \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                  SumStakeUnion ==
                    \A S1, S2 \in SUBSET Validators :
                       SumStake(S1) + SumStake(S2)
                       = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                  SumStakeNat ==
                    \A S \in SUBSET Validators : SumStake(S) \in Nat,
                  ThresholdBounds ==
                    /\ FastThreshold \in Nat
                    /\ SlowThreshold \in Nat
                    /\ FastThreshold = (TotalStake * 8) \div 10
                    /\ SlowThreshold = (TotalStake * 6) \div 10
                    /\ 2 * FastThreshold > TotalStake
                    /\ 2 * SlowThreshold > TotalStake,
                  NEW CONSTANT Q1 \in 
                  SUBSET Validators,
                  NEW CONSTANT Q2 \in 
                  SUBSET Validators,
                  SumStake(Q1) >= FastThreshold ,
                  SumStake(Q2) >= FastThreshold ,
                  <1>1 ,
                  <1>2 ,
                  <2>1 ,
                  SumStakeNat ,
                  ArithmeticHelp ,
                  SMT 
           PROVE  0 >= 2 * FastThreshold - TotalStake
File "./proofs/QuorumIntersection.tla", line 105, characters 15-16:
[ERROR]: Could not prove or check:
           ASSUME NEW CONSTANT Validators,
                  NEW CONSTANT Stake,
                  NEW CONSTANT TotalStake,
                  NEW CONSTANT FastThreshold,
                  NEW CONSTANT SlowThreshold,
                  StakeFunction == Stake \in [Validators -> Nat],
                  NEW CONSTANT SumStake
                  (_),
                  SumStakeEmpty == SumStake({}) = 0,
                  SumStakeDisjoint ==
                    \A S1, S2 \in SUBSET Validators :
                       S1 \cap S2 = {}
                       => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                  SumStakeMonotone ==
                    \A S1, S2 \in SUBSET Validators :
                       S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                  SumStakeTotal == SumStake(Validators) = TotalStake,
                  SumStakeBound ==
                    \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                  SumStakeUnion ==
                    \A S1, S2 \in SUBSET Validators :
                       SumStake(S1) + SumStake(S2)
                       = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                  SumStakeNat ==
                    \A S \in SUBSET Validators : SumStake(S) \in Nat,
                  ThresholdBounds ==
                    /\ FastThreshold \in Nat
                    /\ SlowThreshold \in Nat
                    /\ FastThreshold = (TotalStake * 8) \div 10
                    /\ SlowThreshold = (TotalStake * 6) \div 10
                    /\ 2 * FastThreshold > TotalStake
                    /\ 2 * SlowThreshold > TotalStake,
                  NEW CONSTANT Q1 \in 
                  SUBSET Validators,
                  NEW CONSTANT Q2 \in 
                  SUBSET Validators,
                  SumStake(Q1) >= FastThreshold ,
                  SumStake(Q2) >= FastThreshold ,
                  <2>2 ,
                  <1>3 ,
                  ArithmeticHelp ,
                  SMT 
           PROVE  FALSE
File "./proofs/QuorumIntersection.tla", line 99, characters 5-6:
[ERROR]: Could not prove or check:
           ASSUME NEW CONSTANT Validators,
                  NEW CONSTANT Stake,
                  NEW CONSTANT TotalStake,
                  NEW CONSTANT FastThreshold,
                  NEW CONSTANT SlowThreshold,
                  StakeFunction == Stake \in [Validators -> Nat],
                  NEW CONSTANT SumStake
                  (_),
                  SumStakeEmpty == SumStake({}) = 0,
                  SumStakeDisjoint ==
                    \A S1, S2 \in SUBSET Validators :
                       S1 \cap S2 = {}
                       => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                  SumStakeMonotone ==
                    \A S1, S2 \in SUBSET Validators :
                       S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                  SumStakeTotal == SumStake(Validators) = TotalStake,
                  SumStakeBound ==
                    \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                  SumStakeUnion ==
                    \A S1, S2 \in SUBSET Validators :
                       SumStake(S1) + SumStake(S2)
                       = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                  SumStakeNat ==
                    \A S \in SUBSET Validators : SumStake(S) \in Nat,
                  ThresholdBounds ==
                    /\ FastThreshold \in Nat
                    /\ SlowThreshold \in Nat
                    /\ FastThreshold = (TotalStake * 8) \div 10
                    /\ SlowThreshold = (TotalStake * 6) \div 10
                    /\ 2 * FastThreshold > TotalStake
                    /\ 2 * SlowThreshold > TotalStake,
                  NEW CONSTANT Q1 \in 
                  SUBSET Validators,
                  NEW CONSTANT Q2 \in 
                  SUBSET Validators,
                  SumStake(Q1) >= FastThreshold ,
                  SumStake(Q2) >= FastThreshold ,
                  ThresholdBounds ,
                  ArithmeticHelp ,
                  SMT 
           PROVE  2 * FastThreshold - TotalStake > 0
File "./proofs/QuorumIntersection.tla", line 74, characters 5-6:
[ERROR]: Could not prove or check:
           ASSUME NEW CONSTANT Validators,
                  NEW CONSTANT Stake,
                  NEW CONSTANT TotalStake,
                  NEW CONSTANT FastThreshold,
                  NEW CONSTANT SlowThreshold,
                  StakeFunction == Stake \in [Validators -> Nat],
                  NEW CONSTANT SumStake
                  (_),
                  SumStakeEmpty == SumStake({}) = 0,
                  SumStakeDisjoint ==
                    \A S1, S2 \in SUBSET Validators :
                       S1 \cap S2 = {}
                       => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                  SumStakeMonotone ==
                    \A S1, S2 \in SUBSET Validators :
                       S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                  SumStakeTotal == SumStake(Validators) = TotalStake,
                  SumStakeBound ==
                    \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                  SumStakeUnion ==
                    \A S1, S2 \in SUBSET Validators :
                       SumStake(S1) + SumStake(S2)
                       = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                  SumStakeNat ==
                    \A S \in SUBSET Validators : SumStake(S) \in Nat,
                  ThresholdBounds ==
                    /\ FastThreshold \in Nat
                    /\ SlowThreshold \in Nat
                    /\ FastThreshold = (TotalStake * 8) \div 10
                    /\ SlowThreshold = (TotalStake * 6) \div 10
                    /\ 2 * FastThreshold > TotalStake
                    /\ 2 * SlowThreshold > TotalStake,
                  NEW CONSTANT S1 \in 
                  SUBSET Validators,
                  NEW CONSTANT S2 \in 
                  SUBSET Validators,
                  SumStakeNat 
           PROVE  SumStake(S1) \in Nat /\ SumStake(S2) \in Nat
                  /\ TotalStake \in Nat
File "./proofs/QuorumIntersection.tla", line 72, characters 5-6:
[ERROR]: Could not prove or check:
           ASSUME NEW CONSTANT Validators,
                  NEW CONSTANT Stake,
                  NEW CONSTANT TotalStake,
                  NEW CONSTANT FastThreshold,
                  NEW CONSTANT SlowThreshold,
                  StakeFunction == Stake \in [Validators -> Nat],
                  NEW CONSTANT SumStake
                  (_),
                  SumStakeEmpty == SumStake({}) = 0,
                  SumStakeDisjoint ==
                    \A S1, S2 \in SUBSET Validators :
                       S1 \cap S2 = {}
                       => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                  SumStakeMonotone ==
                    \A S1, S2 \in SUBSET Validators :
                       S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                  SumStakeTotal == SumStake(Validators) = TotalStake,
                  SumStakeBound ==
                    \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                  SumStakeUnion ==
                    \A S1, S2 \in SUBSET Validators :
                       SumStake(S1) + SumStake(S2)
                       = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                  SumStakeNat ==
                    \A S \in SUBSET Validators : SumStake(S) \in Nat,
                  ThresholdBounds ==
                    /\ FastThreshold \in Nat
                    /\ SlowThreshold \in Nat
                    /\ FastThreshold = (TotalStake * 8) \div 10
                    /\ SlowThreshold = (TotalStake * 6) \div 10
                    /\ 2 * FastThreshold > TotalStake
                    /\ 2 * SlowThreshold > TotalStake,
                  NEW CONSTANT S1 \in 
                  SUBSET Validators,
                  NEW CONSTANT S2 \in 
                  SUBSET Validators,
                  <1>1 ,
                  <1>2 ,
                  <1>3 ,
                  ArithmeticHelp ,
                  SMT 
           PROVE  SumStake(S1) + SumStake(S2)
                  =< TotalStake + SumStake(S1 \cap S2)
File "./proofs/QuorumIntersection.tla", line 76, characters 5-6:
[ERROR]: Could not prove or check:
           ASSUME NEW CONSTANT Validators,
                  NEW CONSTANT Stake,
                  NEW CONSTANT TotalStake,
                  NEW CONSTANT FastThreshold,
                  NEW CONSTANT SlowThreshold,
                  StakeFunction == Stake \in [Validators -> Nat],
                  NEW CONSTANT SumStake
                  (_),
                  SumStakeEmpty == SumStake({}) = 0,
                  SumStakeDisjoint ==
                    \A S1, S2 \in SUBSET Validators :
                       S1 \cap S2 = {}
                       => SumStake(S1 \cup S2) = SumStake(S1) + SumStake(S2),
                  SumStakeMonotone ==
                    \A S1, S2 \in SUBSET Validators :
                       S1 \subseteq S2 => SumStake(S1) =< SumStake(S2),
                  SumStakeTotal == SumStake(Validators) = TotalStake,
                  SumStakeBound ==
                    \A S \in SUBSET Validators : SumStake(S) =< TotalStake,
                  SumStakeUnion ==
                    \A S1, S2 \in SUBSET Validators :
                       SumStake(S1) + SumStake(S2)
                       = SumStake(S1 \cup S2) + SumStake(S1 \cap S2),
                  SumStakeNat ==
                    \A S \in SUBSET Validators : SumStake(S) \in Nat,
                  ThresholdBounds ==
                    /\ FastThreshold \in Nat
                    /\ SlowThreshold \in Nat
                    /\ FastThreshold = (TotalStake * 8) \div 10
                    /\ SlowThreshold = (TotalStake * 6) \div 10
                    /\ 2 * FastThreshold > TotalStake
                    /\ 2 * SlowThreshold > TotalStake,
                  NEW CONSTANT S1 \in 
                  SUBSET Validators,
                  NEW CONSTANT S2 \in 
                  SUBSET Validators,
                  <1>4 ,
                  <1>5 ,
                  ArithmeticHelp ,
                  SMT 
           PROVE  SumStake(S1 \cap S2)
                  >= SumStake(S1) + SumStake(S2) - TotalStake
File "./proofs/QuorumIntersection.tla", line 1, character 1 to line 158, character 4:
[ERROR]: 10/97 obligations failed.
There were backend errors processing module `"QuorumIntersection"`.
 tlapm ending abnormally with Failure("backend errors: there are unproved obligations")
Raised at Stdlib.failwith in file "stdlib.ml", line 29, characters 17-33
Called from Tlapm_lib.process_module in file "src/tlapm_lib.ml", line 447, characters 12-77
Called from Tlapm_lib.main.f in file "src/tlapm_lib.ml", line 576, characters 23-43
Called from Stdlib__List.fold_left in file "list.ml", line 123, characters 24-34
Called from Tlapm_lib.main in file "src/tlapm_lib.ml", line 579, characters 13-40
Called from Tlapm_lib.init in file "src/tlapm_lib.ml", line 591, characters 8-33

